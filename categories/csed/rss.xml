<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Csed on C&#39;est la Z</title>
    <link>https://cestlaz.github.io/categories/csed/</link>
    <description>Recent content in Csed on C&#39;est la Z</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 15 Dec 2018 08:56:06 -0400</lastBuildDate>
    
	<atom:link href="https://cestlaz.github.io/categories/csed/rss.xml" rel="self" type="application/rss" />
    
    
    <item>
      <title>Professional Development - APCS-A, similar and beyond</title>
      <link>https://cestlaz.github.io/post/pd-apcs-a-and-beyond/</link>
      <pubDate>Sat, 15 Dec 2018 08:56:06 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/pd-apcs-a-and-beyond/</guid>
      <description>A while ago I wrote about our plans at Hunter to run professional development for CS teachers. Specifically, running once a month sessions for teachers who teach APCS-A, similar and beyond.
The idea started as a joke but morphed into a legit idea.
I was talking to some friends about CTLE hours and how ridiculous the system is. NY State teachers need 100 hours of CTLE credit (PD hours) every so many years.</description>
    </item>
    
    <item>
      <title>Teaching Sorting</title>
      <link>https://cestlaz.github.io/post/teaching-sorting/</link>
      <pubDate>Mon, 19 Nov 2018 20:04:08 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/teaching-sorting/</guid>
      <description>Earlier today I saw a facebook post asking for thoughts on teaching sorting. The question was specifically not about motivations like having the class act out sorts or sort cards but rather about the coding.
I&#39;ve been meaning to write about this since last summer when I attended Owen Astrachan&#39;s talk on the same subject.
Early in my career when teaching sorting I developed the n^2 sorts as standalone routines just as they&#39;re presented in most books but as I gained more experience as a teacher, I changed it up to build the sorts (at least some of them) from existing concepts.</description>
    </item>
    
    <item>
      <title>Globals Breaks And Returns, oh my</title>
      <link>https://cestlaz.github.io/post/globals-breaks-and-returns/</link>
      <pubDate>Sat, 06 Oct 2018 15:48:55 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/globals-breaks-and-returns/</guid>
      <description>Never use global variables Never break out of a loop  These are two &#34;best practices&#34; that are frequently touted in early CS classes both at the high school and college level.
They came up a couple of times yesterday. Once in the Facebook APCS-A teachers group and once on Alfred Thompson&#39;s blog.
Alfred post was topically on global variables. Actually it was deeper than just global variables. It&#39;s also about how students progress - what they can figure out at various stages of progress and how what seems like a good idea early on the path to computer science doesn&#39;t seem so great later on.</description>
    </item>
    
    <item>
      <title>When the students know more than the teacher</title>
      <link>https://cestlaz.github.io/post/students-know-more/</link>
      <pubDate>Thu, 04 Oct 2018 16:07:09 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/students-know-more/</guid>
      <description>We&#39;ve heard it many times with computer science - &#34;the kids know more than the teacher.&#34;
On the one hand, the truth is that this isn&#39;t so much the case. Kids might use computers all the time but they don&#39;t necessarily know much about them or about computer science (link 1, link 2). Then you have students who think they know all about CS but really don&#39;t. They might have picked up a bit of coding somewhere but more often than not, the knowledge is pretty superficial.</description>
    </item>
    
    <item>
      <title>Fall 2018 HS CS Tour</title>
      <link>https://cestlaz.github.io/post/fall-2018-hs-tour/</link>
      <pubDate>Sat, 29 Sep 2018 16:57:26 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/fall-2018-hs-tour/</guid>
      <description>I&#39;ve written before about why Hunter College CS is so important for NYC and I&#39;ve been working hard to develop our Daedalus Scholars honors CS program - a program in which students receive a scholarship along with all sorts of special opportunities to add on to their in class CS education. The program and Hunter CS as a whole have made a lot of progress over the past two years and each year I roll out new special activities and events for my honors students.</description>
    </item>
    
    <item>
      <title>CS vs CT vs Coding</title>
      <link>https://cestlaz.github.io/post/cs-ct-cc/</link>
      <pubDate>Fri, 28 Sep 2018 12:08:35 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/cs-ct-cc/</guid>
      <description>There&#39;s been a lot of buzz recently concernting Computational Thinking (CT) vs Computer Science (CS) vs Coding / Programming on the interwebs.
 Some of the questions and concerns that I&#39;ve seen recently include: What is CT?? Will rich schools get CS and poor only CT? Will rich schools get CS and poor on coding?  The first question is a big one and as a community we haven&#39;t answered it yet.</description>
    </item>
    
  </channel>
</rss>