<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>teaching-cs-in-all-the-grades.org on C&#39;est la Z</title>
    <link>https://cestlaz.github.io/categories/teaching-cs-in-all-the-grades.org/</link>
    <description>C&#39;est la Z (teaching-cs-in-all-the-grades.org)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 04 Aug 2020 06:47:08 -0400</lastBuildDate>
    
    <atom:link href="https://cestlaz.github.io/categories/teaching-cs-in-all-the-grades.org/rss.xml" rel="self" type="application/rss" />
    
    
    <item>
      <title>Preparing CS Teachers - adding methods to our madness</title>
      <link>https://cestlaz.github.io/post/teacher-cert-methods/</link>
      <pubDate>Tue, 04 Aug 2020 06:47:08 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/teacher-cert-methods/</guid>
      <description>&lt;p&gt;
Our summer intensive was, well, pretty intensive. We met all day every
day for a month and knocked out four classes. 
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Programming (CS1)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Data Structures
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Topics
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Methods
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
If you ever took or taught a summer session class, you know that time
is tight and generally you cover a little less than in a fall or
spring semester class. N credits in 5 weeks just isn&amp;#39;t the same as
those same N credits spread over 13. 
&lt;/p&gt;
&lt;p&gt;
How did we recapture some time? First, we had some pre-work and second
we integrated some of the courses. We couldn&amp;#39;t really do it with
programming and data structures and we were less successful at
integrating the topics than we liked but it made the most sense with
methods, in fact, I think the methods part of the class was more
successful as a result of it&amp;#39;s integration with the other subjects
than it would have been as a stand alone.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s what we did.
&lt;/p&gt;
&lt;p&gt;
We first thought about covering methods as we taught topics - that is,
present something using some teaching technique, cover the topic and
then also dive in to the technique. This turned out to be a
mistake. The teachers that came in with a strong CS background  seemed
fine but for the ones newer to the subject matter, it was too much at
once. We had to alter course.
&lt;/p&gt;
&lt;p&gt;
So we did.
&lt;/p&gt;
&lt;p&gt;
We continued to model various methods and sometimes made a side remark
here or there but focused on the CS. After a few days in, we were
ready to spend a day on pedagogy. We broke the class into groups and
had them reflect on the content we taught - how did we teach it? Why
did we approach it the way we did? Did it work? This led to some rich
discussion of both CS teaching techniques and teaching in general. We
were very happy with how it all went.
&lt;/p&gt;
&lt;p&gt;
We then went back to content but added more side bits here and there
about the teaching methods - as they became more comfortable with the
CS we were able to integrate more methods talk in with the CS talk. At
our next formal pedagogy lesson, we again talked about new techniques
that were modeled but also looked at alternative approaches and
took a deeper look at our individual cohort members student
populations. 
&lt;/p&gt;
&lt;p&gt;
Some of the methods we discussed included: 
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Live Coding 
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Subgoal labeling
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Make predictions
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Modifying existing code
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
code tracing
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
diagramming
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
scaffolded assignments (code skeletons)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Rubber Duck Debugging
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Code sharing (presenting)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
writing implementations of library code
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
slack techniques (reacts polls, channels, ) 
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
thought-grooming/sparking warm-up Qs/tasks
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
relevant quotes at warm-up
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
and more but the list doesn&amp;#39;t really do the discussion justice. Take
&amp;#34;live coding&amp;#34; for example - that&amp;#39;s not just writing code in front of
the class. There&amp;#39;s a rich discussion here - how do you narrate? Is it
truly live or from a note sheet? How about discussing workflow while
modeling it? How about live coding subgoals? The actual class is much
richer than just &amp;#34;live coding.&amp;#34;
&lt;/p&gt;
&lt;p&gt;
In addition to integrating methods into the teaching of content, we
also merged it with the topics course for some of the assessment. For
topics, each group created a class or unit on some area of CS and
included in the documents they prepared and presentation was a
discussion of how it might bet taught. I know that they all came in as
experienced teachers so weren&amp;#39;t starting with nothing but man, they
knocked it out of the park. I&amp;#39;ll be talking more about the topics in a
later post.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ll probably say this a lot in my summer intensive wrap up posts but
it was such a treat working with a cohort of great educators and also
to have two of the best teachers I know to work with as the teaching
team.
&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>