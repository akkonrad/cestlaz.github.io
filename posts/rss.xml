<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on C&#39;est la Z</title>
    <link>https://cestlaz.github.io/posts/</link>
    <description>Recent content in Posts on C&#39;est la Z</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 16 Sep 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://cestlaz.github.io/posts/rss.xml" rel="self" type="application/rss" />
    
    
    <item>
      <title>Blight Move</title>
      <link>https://cestlaz.github.io/posts/blight-move/</link>
      <pubDate>Sun, 16 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/blight-move/</guid>
      <description>It was Jon and Amy&#39;s wedding. Jon was my student back in the day so there were a handful of Stuy alums there to celebrate the occasion. Some, like Jon, I had stayed in touch with and now count as friends. Others, I knew but hadn&#39;t kept up with.
I was with a cluster of guests and for some reason the conversation turned to chess computers. I started telling a story about the my former teacher Herb Greenhut&#39;s Talking Chess Challenger computer.</description>
    </item>
    
    <item>
      <title>Creating a school for CS</title>
      <link>https://cestlaz.github.io/posts/creating-a-school/</link>
      <pubDate>Tue, 11 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/creating-a-school/</guid>
      <description>Do we really need CS focused high schools?
That&#39;s the question Alfred Thompson asked partly in reaction to my post talking about Bill Gates&#39; visit to AFSE, a NYC public school with a CS focus.
On both posts, Michael Preston shared some important and good points about AFSE as a starting point and gateway that helped lead to CS4All in NYC and also specifically about AFSE.
In response to Alfred&#39;s question I thought it was time I shared a bit about what I was pushing for AFSE back when I was involved.</description>
    </item>
    
    <item>
      <title>That Time Bill Gates Visited AFSE</title>
      <link>https://cestlaz.github.io/posts/that-time-bill-gates-visited-afse/</link>
      <pubDate>Sun, 09 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/that-time-bill-gates-visited-afse/</guid>
      <description>AFSE stands for the Academy for Software Engineering. It&#39;s a public school in New York City with a stated focus on, well, software engineering. I have some history with the school and its creation but that&#39;s not what this post is about. In fact, this post isn&#39;t really about AFSE at all. I plan to neither praise or critique the school. This is about what Bill Gates wrote about his recent visit.</description>
    </item>
    
    <item>
      <title>Do you need to know binary for CS?</title>
      <link>https://cestlaz.github.io/posts/why-binary/</link>
      <pubDate>Wed, 05 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/why-binary/</guid>
      <description>Yesterday, Alfred Thompson asked &#34;Why is it important for CS students to understand binary?&#34; on Twitter which led to a number of interesting responses. Alfred summarized and wrote his own thoughts on his blog.
I wanted to add a comment but I already wrote a post for yesterday so put it off until today.
First let me say that you can have a very successful career in tech and not really know binary or number bases other than 10.</description>
    </item>
    
    <item>
      <title>Wishing all K12 teachers a great year</title>
      <link>https://cestlaz.github.io/posts/starting-school-2018/</link>
      <pubDate>Tue, 04 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/starting-school-2018/</guid>
      <description>Today was the first day of school for all NYC teachers. Students come back tomorrow. That&#39;s a quick turnaround. Some years, they get a day or two before the kids come in. That&#39;s much easier.
The first day is usually dominated by meetings. In a large school like Stuy you&#39;ll typically have a long faculty meeting in the morning and a department meeting in the afternoon. Not much time to actually get ready for classes.</description>
    </item>
    
    <item>
      <title>Class Rules</title>
      <link>https://cestlaz.github.io/posts/class-rules/</link>
      <pubDate>Mon, 27 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/class-rules/</guid>
      <description>Classes started up again today so I thought I&#39;d talk about my class rules.
I don&#39;t seem to recall many class rules in college. Sure, there was a grading policy governing homework and the like but not much beyond that. In K12 there are usually more. When you can talk, how you set up your notebook, how to do homework, bathroom policy etc.
For years, I&#39;ve used the same set of class rules and I always talk about the rules with my classes.</description>
    </item>
    
    <item>
      <title>Artifacts Have Stories</title>
      <link>https://cestlaz.github.io/posts/artifacts-have-stories/</link>
      <pubDate>Fri, 24 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/artifacts-have-stories/</guid>
      <description>Earlier today I was asked about my avatar:
I&#39;ve been using it for most services for a few months now. It&#39;s an image that I&#39;ve had for ages. I started thinking about using it about a year ago
So, what&#39;s the story?
It was back in 1993. I had just started at Stuy. I taught some CS when I was at Seward Park but at the time, I was teaching all math at Stuy.</description>
    </item>
    
    <item>
      <title>Software Longevity</title>
      <link>https://cestlaz.github.io/posts/software-longevity/</link>
      <pubDate>Sun, 19 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/software-longevity/</guid>
      <description>Writing about old projects got me thinking of my first programming gig and software longevity. It was a part time after school / full time summer job at Arcus-Simplex-Brown. I started in my senior year in high school and continued through most of my first year in college. It wasn&#39;t my first job - that was being a delivery boy at Video Room, an independent video store that&#39;s survived from the old VHS/Betamax days through DVDs and is still, somehow or other, surviving in this day and age of streaming video.</description>
    </item>
    
    <item>
      <title>Rite Of Passage Projects</title>
      <link>https://cestlaz.github.io/posts/rite-of-passage-projects/</link>
      <pubDate>Fri, 17 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/rite-of-passage-projects/</guid>
      <description>JCS&#39;s post on Irreal today brought me back. It was about Brief which was the editing hotness back in the day. I played with it a little really mostly used Emacs clones for real work when I was stuck on MS-DOS systems. Usually either JOVE or Epsilon
In the comments Jon reminded me about the MKS Toolkit which brought most everyday Unix tools to DOS along with a shell and a version of Vi.</description>
    </item>
    
    <item>
      <title>Early Code Reuse</title>
      <link>https://cestlaz.github.io/posts/early-code-reuse/</link>
      <pubDate>Thu, 16 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/early-code-reuse/</guid>
      <description>I&#39;ve been following the tweets coming out of ICER2018. I&#39;ve never been to ICER but now am thinking about trying to get funding to go next year. One set of tweets involved students writing or using APIs or Libraries. This overlaps with Owen Astrachan&#39;s talk from this past year&#39;s CSTA conference on sorting. I was planning on writing a post about Owen&#39;s talk but I thought I&#39;d leave it for the school year closer to when sorting is typically covered.</description>
    </item>
    
    <item>
      <title>Class Communications</title>
      <link>https://cestlaz.github.io/posts/class-communications/</link>
      <pubDate>Wed, 08 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/class-communications/</guid>
      <description>Right now I&#39;m on vacation in Harrogate England. Natan is here taking part in the International Gilbert and Sullivan Festival so Devorah and I came along as tourists. Today we went to Knaresborough:
Normally when traveling I try to get everything in and that leaves me pretty exhausted at the end of each day. Since this time we&#39;ll be here for around two weeks, I&#39;m trying a less hectic pace. Do some touring along with some rest and relaxation.</description>
    </item>
    
    <item>
      <title>Getting Ready To Go Back</title>
      <link>https://cestlaz.github.io/posts/getting-ready-to-go-back-2018/</link>
      <pubDate>Fri, 03 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/getting-ready-to-go-back-2018/</guid>
      <description>It&#39;s August 3rd and I&#39;ve been giving a lot of thought to the start of the semester. Normally I wouldn&#39;t think about the Fall term this early. While I&#39;ve been working on and off since last semester ended, I don&#39;t officially &#34;go back&#34; until August 23rd with classes starting on the 27th. The difference is that for the first time in forever we&#39;re taking a longish trip between now and then.</description>
    </item>
    
    <item>
      <title>Two Faces of Project Based Learning</title>
      <link>https://cestlaz.github.io/posts/two-faces-of-pbl/</link>
      <pubDate>Sat, 28 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/two-faces-of-pbl/</guid>
      <description>If one looks at my twitter feed they&#39;ll notice that in addition to CS Ed, another issue I&#39;m passionate about is school reform or rather resistance to what is popularly known as and mislabeled as school reform. I&#39;m anti vouchers, charter schools, high stakes testing and more. One of the heroes of this resistance is education historian Diane Ravitch. I&#39;m a big fan of Diane&#39;s and she&#39;s one of the true great champions of public schools, kids, and teachers.</description>
    </item>
    
    <item>
      <title>Keyboarding and the Digital Divide</title>
      <link>https://cestlaz.github.io/posts/keyboarding-dig-divite/</link>
      <pubDate>Mon, 23 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/keyboarding-dig-divite/</guid>
      <description>My friend Adam posted this link to an article on the new digital divide the other day. It&#39;s talking about young people who do everything on the phone so aren&#39;t familiar or comfortable with a traditional keyboard/mouse computer setup. In the comments there were some of us who lamented about the term &#34;digital natives&#34; and the idea that kids these days know all about computers and technology.
This led me to think about a couple of things.</description>
    </item>
    
    <item>
      <title>Time To Create An Ethics Course</title>
      <link>https://cestlaz.github.io/posts/time-to-create-an-ethics-course/</link>
      <pubDate>Sat, 21 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/time-to-create-an-ethics-course/</guid>
      <description>I think it&#39;s time for me to start developing a CS Ethics class.
An ethics course isn&#39;t a replacement for having teachers that live and model good behavior and weave ethical issues throughout the curriculum but still, adding a separate course on top of that has its merits.
I&#39;m not in a rush to create this course. I might be done in a month or it might take a couple of years.</description>
    </item>
    
    <item>
      <title>A couple of Brian Kernighan videos</title>
      <link>https://cestlaz.github.io/posts/brian-kernighan-videos/</link>
      <pubDate>Fri, 20 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/brian-kernighan-videos/</guid>
      <description>I noticed a couple of short videos - interviews with Brian Kernighan - on my YouTube home page the other day. This is probably because I recently viewed a Kernighan video in the same series after reading this post on the history of naming grep on JCS&#39;s blog.
 For you youngsters out there, CS people of my generation relied on Brian&#39;s books &#34;The C Programming Language&#34; and &#34;The Unix Programming Environment&#34;</description>
    </item>
    
    <item>
      <title>How early for APCS</title>
      <link>https://cestlaz.github.io/posts/how-early-apcs/</link>
      <pubDate>Sun, 15 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/how-early-apcs/</guid>
      <description>In what grade should students take APCS? This question comes up from time to time.
I&#39;ve heard answers ranging from middle school through never. Infact, years ago, my chairman relayed a conversation he had with Marvin Minsky where he asked Minsky what the high schools should be teaching with respect to CS. The answer was &#34;nothing.&#34; This was then amended to &#34;teach them to type.&#34; Of course this was a long time ago but I believe the sentiment was that college was the right time and the high schools don&#39;t know what they&#39;re doing and will just screw up the kids.</description>
    </item>
    
    <item>
      <title>CSTA 2018 - Funding and Direction</title>
      <link>https://cestlaz.github.io/posts/csta-2018-future/</link>
      <pubDate>Thu, 12 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/csta-2018-future/</guid>
      <description>In addition to everything I wrote about last time there were a couple of other big announcements at this year&#39;s CSTA conference. Both announcements deal with funding.
First, there is a new class of CSTA membership. The free tier remains but now for $50 you can join CSTA+. This new level of membership comes with a bunch of extras that are probably good for K12 teachers but I doubt I&#39;ll use any of them.</description>
    </item>
    
    <item>
      <title>Csta 2018 Report</title>
      <link>https://cestlaz.github.io/posts/csta-2018-report/</link>
      <pubDate>Tue, 10 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/csta-2018-report/</guid>
      <description>I just got back from the CSTA (Computer Science Teacher&#39;s Association) conference. It&#39;s the biggest annual conference dedicated to K12 CS education. I think there were about 700 people attending. It felt much larger than last year but compared to SIGCSE which is double the size, CSTA still felt pretty intimate.
The conference was in Omaha Devorah came along to play tourist and we both came a day early to do some site seeing.</description>
    </item>
    
    <item>
      <title>I&#39;m not going to congratulate you on your AP results</title>
      <link>https://cestlaz.github.io/posts/ap-2018/</link>
      <pubDate>Thu, 05 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/ap-2018/</guid>
      <description>While busy finishing off my sides for my talk at CSTA2018 this weekend I noticed a Facebook post about APCS exam grades now or shortly being available.
I&#39;m no longer teaching high school but still fancy myself a teacher first and part of the K12CS community. We&#39;re a growing community and we&#39;re growing fast.
Usually, at this time of year we see a number of people posting their results. &#34;I had 16 test takers, had 5 fives, 6 fours etc.</description>
    </item>
    
    <item>
      <title>Certification The Old Way</title>
      <link>https://cestlaz.github.io/posts/certification-the-old-way/</link>
      <pubDate>Mon, 02 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/certification-the-old-way/</guid>
      <description>I&#39;ve taken part in a few conversations and read more than a few threads on teacher certification exams recently. Specifically, CS teacher certification exams. There are a bunch of them floating around. There&#39;s the Praxis offered by ETS, the one from the National Evaluation Series, the Washington Evaluator Test Series one and then there&#39;s what&#39;s going on in Texas. NY State says it will eventually develop their own.
I have mixed feelings about exams like these.</description>
    </item>
    
    <item>
      <title>Talking about CS teacher certification at CSTA 2018</title>
      <link>https://cestlaz.github.io/posts/csta-2018/</link>
      <pubDate>Sun, 01 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/csta-2018/</guid>
      <description>As I mentioned in my last post, this coming weekend is the Computer Science Teachers Association (CSTA) conference. I&#39;ve been a member of CSTA since the beginning but this will be only the second time I&#39;ve made it to the annual conference.
The CSTA conference might be the largest conference specifically for k12 computer science teachers and that makes it different from conferences like SIGCSE which is for CS education and education research at all levels or ISTE which seems to be more of an Ed Tech conference.</description>
    </item>
    
    <item>
      <title>Using Emacs Episode 50 - presentations</title>
      <link>https://cestlaz.github.io/posts/using-emacs-50-presentations/</link>
      <pubDate>Sat, 30 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-50-presentations/</guid>
      <description>Next weekend I&#39;ll be attending the Computer Science Teachers Association&#39;s annual conference. It&#39;s probably the biggest conference focussed on K12 Computer Science education. This year, in addition to attending, I&#39;ll be giving a talk on preservice and inservice CS teacher preparation programs. I&#39;ll be talking about the new New York State certification requirements along with what we&#39;re rolling out at Hunter College.
This means putting together a slide deck for the session.</description>
    </item>
    
    <item>
      <title>Hunter CS - a lot of progress in a short time</title>
      <link>https://cestlaz.github.io/posts/hunter-cs-year-two/</link>
      <pubDate>Fri, 29 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/hunter-cs-year-two/</guid>
      <description>Yesterday I was back on campus for an early orientation session for Hunter&#39;s incoming Daedalus CS honors students. It was the first time all of us got to meet face to face. The students I met with will be my third cohort. I got to thinking how far we&#39;ve come in under three years.
Hunter&#39;s had a strong but little known undergraduate CS program for as long as I&#39;ve known. Much like any program, we&#39;ve got our strengths and weaknesses but you go through our program and academically you&#39;ll be as well prepared as from anywhere else.</description>
    </item>
    
    <item>
      <title>PD for people who know CS</title>
      <link>https://cestlaz.github.io/posts/pd-for-cs/</link>
      <pubDate>Wed, 27 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/pd-for-cs/</guid>
      <description>I saw a couple of tweets from Sarah Judd this morning:
A lot of CS Ed PD assumes you are new to CS. I really want CS Ed PD for people like us that came from a CS background and want to understand the pedagogy for CS in particular better. Do you know of some?
&amp;mdash; Sarah Judd (@SarahEJudd) June 27, 2018 
Yes! I love SIGCSE and CSTA. I just feel like.</description>
    </item>
    
    <item>
      <title>Using Emacs Episode 49 mu4e-conversation</title>
      <link>https://cestlaz.github.io/posts/using-emacs-49-mu4e-conversation/</link>
      <pubDate>Thu, 21 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-49-mu4e-conversation/</guid>
      <description>I&#39;ve been using Emacs for email for a couple of years now. Not for everything, for now my personal email is still Gmail but work is sent and read through Emacs. I&#39;m currently using mu4e and while it has a few quirks and limitations, I like it very much. You can take a look on how I configure and use it here.
The other day I saw this thread on Emacs about a new package - mu4e-conversation.</description>
    </item>
    
    <item>
      <title>How I Grokked OOP</title>
      <link>https://cestlaz.github.io/posts/how-i-grokked-oop/</link>
      <pubDate>Thu, 14 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/how-i-grokked-oop/</guid>
      <description>Time to get back to CS and CS Ed related blogging.
Last week, in Garth Flint&#39;s post about his summer plans, Garth mentioned wanting to get his head around Object Oriented Programming and possibly taking a course to help him get there. I thought I&#39;d talk a little about how I got my head around OOP here and some of the difficulties I faced then and what people might face now.</description>
    </item>
    
    <item>
      <title>Giving control of NYC&#39;s specialized schools to a political appointee</title>
      <link>https://cestlaz.github.io/posts/shsat-part2/</link>
      <pubDate>Mon, 04 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/shsat-part2/</guid>
      <description>Yesterday I shared my thoughts on Bill de Blasio&#39;s plans to &#34;fix&#34; the selection criteria for New York City&#39;s specialized high schools. If you haven&#39;t read the post, you can find it here.
I was going to get back to CS and CS Ed related blogging today but there&#39;s more to the story.
In spite of what BdB stated, it&#39;s not enough for him to switch to another measure - the middle school state exam along with some modifiers.</description>
    </item>
    
    <item>
      <title>Changing Admissions to the NYC Specialized High Schools</title>
      <link>https://cestlaz.github.io/posts/shsat/</link>
      <pubDate>Sun, 03 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/shsat/</guid>
      <description>Yesterday, Bill de Blasio, the current Mayor of New York City outlined how he would &#34;fix&#34; our specialized schools. The schools he was referring to were the &#34;big three&#34; of Stuyvesant, Bronx Science, and Brooklyn Tech and then five additional schools - The High School for Math Science and Engineering at CCNY, The High School for American Studies at Lehman, Brooklyn Latin, The Queens Arts and Science High School at York College, and Staten Island Tech.</description>
    </item>
    
    <item>
      <title>The Tech or the Teacher</title>
      <link>https://cestlaz.github.io/posts/tech-or-teacher/</link>
      <pubDate>Thu, 31 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/tech-or-teacher/</guid>
      <description>Every morning one of the first things I do is quickly glance at my emails and other notifications. I really should wait until I&#39;m more awake but old habits die hard.
As some of you know over the past couple of years I&#39;ve been making a series of videos and related post on using my editor of choice, Emacs. I&#39;ve done 48 videos, have over 2500 subscribers on YouTube and people seem to find some value from the series.</description>
    </item>
    
    <item>
      <title>Teaching recursion early? Make sure to use a good tool.</title>
      <link>https://cestlaz.github.io/posts/recursion-early/</link>
      <pubDate>Wed, 30 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/recursion-early/</guid>
      <description>I replied this tweet yesterday and thought I&#39;d expound a bit.
We started kids using scheme on 10th grade at stuy so did recursion early. Not everyone got all of it but it think it made things much easier for those that you more CS later.
&amp;mdash; Mike Zamansky (@zamansky) May 29, 2018 
We introduced recursion very early in our intro course at Stuy and I think it worked well.</description>
    </item>
    
    <item>
      <title>Is Cs for All Worth Doing</title>
      <link>https://cestlaz.github.io/posts/is-cs4all-worth-doing/</link>
      <pubDate>Sat, 26 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/is-cs4all-worth-doing/</guid>
      <description>Last time I mentioned the pushback on CS for All. While many people are all in for CS for All, resistance is coming from many areas. There&#39;s resistance from teachers of other subject areas, people who think it&#39;s merely job training for the tech industry (which it can be if done poorly), people who feel it will be implemented at the expense of other important subjects already on the chopping block like music and art, and others.</description>
    </item>
    
    <item>
      <title>Should CS for All be implemented at the college level?</title>
      <link>https://cestlaz.github.io/posts/csforall-in-college/</link>
      <pubDate>Fri, 25 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/csforall-in-college/</guid>
      <description>There&#39;s been a lively discussion on pushback to CS for All at the K12 level over on Facebook. Mark Guzdial started a sub thread asking if CS for All should first be implemented at the undergrad level rather than K12.
It&#39;s an interesting question and as good as anything to get me out of my month long non-blogging rut.
Mark was right when he said that if Colleges implement CS for All, K12 will likely do so to follow - just look at AP.</description>
    </item>
    
    <item>
      <title>Is there room for CS for All</title>
      <link>https://cestlaz.github.io/posts/room-for-csforall/</link>
      <pubDate>Sun, 29 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/room-for-csforall/</guid>
      <description>A fear revolving around CS For All concerns where will the money come from and how will we fit in the new classes.
One suggested solution is to integrate CS into other subjects. I thought I&#39;d write today about why I don&#39;t think the fear is valid and while integrating CS into other classes can have value, it probably isn&#39;t a long term solution for CS education.
Let&#39;s start with the integration solution.</description>
    </item>
    
    <item>
      <title>Unfunded Mandates and CS For All</title>
      <link>https://cestlaz.github.io/posts/unfunded-mandates/</link>
      <pubDate>Fri, 27 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/unfunded-mandates/</guid>
      <description>This morning, Mark Guzdial wrote about unfunded mandates and CS for All. Unfunded mandates frequently wreak havoc on schools in a number of ways but in the long run, I don&#39;t think it should have a severe effect on CS for All. Rather, it could have a big impact on the number of CS courses we offer beyond that.
Mark relay&#39;s a story from the Cambridge Rindge and Latin School where at the time many students wanted more CS classes but the school wasn&#39;t planning on hiring a new CS teacher.</description>
    </item>
    
    <item>
      <title>Pull Requests and Other People&#39;s Code</title>
      <link>https://cestlaz.github.io/posts/pull-requests/</link>
      <pubDate>Thu, 26 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/pull-requests/</guid>
      <description>One of the things I&#39;ve heard for years from former students - both those looking for jobs and those looking to hire is that colleges don&#39;t really do a good job preparing students for careers in tech. Sure they teach the algorithms and the theory but ther are a lot of missing pieces, particularly on the practical end. I&#39;m certainly not advocating turning CS programs into coding schools but there are many low cost opportunities to bring practical real world best practices in to the CS classroom.</description>
    </item>
    
    <item>
      <title>Do the students finish the tests or does the test finish the students</title>
      <link>https://cestlaz.github.io/posts/tests-finish-students/</link>
      <pubDate>Wed, 25 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/tests-finish-students/</guid>
      <description>I tweeted this the other day:
Why don&amp;#39;t so many teachers and professors understand that the test or assignment you can do in 15 minutes will take your beginning students at least an hour and probably a lot more to complete.
&amp;mdash; Mike Zamansky (@zamansky) April 18, 2018 
What led to the tweet was a discussion I was having with some students about not having enough time on tests which led to a discussion of having to drop everything to spend every waking hour on a project.</description>
    </item>
    
    <item>
      <title>Using Emacs 48 Silversearcher</title>
      <link>https://cestlaz.github.io/posts/using-emacs-48-silversearcher/</link>
      <pubDate>Sun, 22 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-48-silversearcher/</guid>
      <description>A couple of days ago I wrote about on my lab grading workflow. In the post I mentioned that I used Emacs to easily navigate between student folders and files so I can actually look at their work in addition to their programs output and test results.
The key is a combination of dired and ag, Emacs&#39;s interface to the Silver Searcher which is something like a recursive code grep on steroids.</description>
    </item>
    
    <item>
      <title>No Magic Bullets - Discovery Learning</title>
      <link>https://cestlaz.github.io/posts/no-magic-bullets-constructivism/</link>
      <pubDate>Sat, 21 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/no-magic-bullets-constructivism/</guid>
      <description>The most recent NYC CSTA chapter meeting was &#34;How do I assess CS?&#34; I wanted to go but it&#39;s been such a crazy month I was just too wiped out. Fortunately, the meetup was recorded. I was able to watch the first half this morning while working out on my stationary trainer which leads me to today&#39;s rare Saturday morning blog post. The meetup consisted of two panels. The first was made up of K12 teachers who taught CS.</description>
    </item>
    
    <item>
      <title>Unit Tests Grading Workflow</title>
      <link>https://cestlaz.github.io/posts/unit-tests-grading-workflow/</link>
      <pubDate>Fri, 20 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/unit-tests-grading-workflow/</guid>
      <description>I&#39;ve talked before about unit testing (here, and here). My premise is that in addition to being an important industry technique, it&#39;s a sound practice for students studying CS. I also contend that it can make grading easier on the teacher. Maybe not as easy as an auto-grader but those have their own problems.
Since I spent most of today grading I thought I&#39;d share my current workflow and how unit tests have made me more efficient.</description>
    </item>
    
    <item>
      <title>TEALS Time</title>
      <link>https://cestlaz.github.io/posts/teals-time/</link>
      <pubDate>Wed, 18 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/teals-time/</guid>
      <description>Everybody know&#39;s I&#39;m the Statler and Waldorf of the CS Education world.
https://media1.giphy.com/media/nPxVvyTWo1aIU/giphy.gif
I&#39;ve been known to be &#34;prickly,&#34; which is a nice way of putting it and I&#39;m openly critical of many programs out there.
One program, however, that I very much like is TEALS. They&#39;ve been around since 2009 founded by Kevin Wang, a former teacher. The basic idea was to have tech professionals go to a school on the way to work and team teach a CS class with one of the school&#39;s teachers.</description>
    </item>
    
    <item>
      <title>Math For Math Teachers - watering down CS Ed before we even start</title>
      <link>https://cestlaz.github.io/posts/math-for-math-teachers/</link>
      <pubDate>Sat, 14 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/math-for-math-teachers/</guid>
      <description>Last Thursday I attended an event - the release of &#34;Priming the Computer Science Teacher Pump: Integrating CS Education into Schools of Ed.&#34; Mark Guzdial wrote about it here. You can also download the actual report here.
I agree with a number of the challenges in creating CS teacher preparation programs that were outlined in the report and I also agree with the idea that a strong CS teacher preparation program should prepare teachers to teach any (and in the case of the programs I designed, create new) curriculum but I wanted to focus on one specific item that was brought up last Thursday.</description>
    </item>
    
    <item>
      <title>Why Strong K12 Teacher Certification is Important</title>
      <link>https://cestlaz.github.io/posts/strong-teacher-certification/</link>
      <pubDate>Tue, 10 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/strong-teacher-certification/</guid>
      <description>About a week ago New York State&#39;s new regulation creating a K12 CS teacher certification went live. Just the other day I was honored to be interviewed by Matt Flamm of Crain&#39;s New York in a follow up piece about it.
Having K12 CS teacher certification is big and having quality programs that lead to certification is HUGE. In my view, it&#39;s a game changer.
Let&#39;s Focus on high school, my wheelhouse.</description>
    </item>
    
    <item>
      <title>Using Emacs Episode 47 - Magit</title>
      <link>https://cestlaz.github.io/posts/using-emacs-47-magit/</link>
      <pubDate>Sat, 07 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-47-magit/</guid>
      <description>I&#39;ve been holding off on doing a Magit video for a while. Mostly because I wasn&#39;t using it exclusively and also because there are already a number of good Magit videos and resources out there.
What changed? Along with the new version of Magin, Jonas Bernoulli wrote up a walkthrough of the Magit interface. For whatever reason, it all finally clicked.
In spite of what the documentation says, Magit is not an interface for git.</description>
    </item>
    
    <item>
      <title>Competitions and Hackathons</title>
      <link>https://cestlaz.github.io/posts/hs-competitions/</link>
      <pubDate>Fri, 06 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/hs-competitions/</guid>
      <description>Today&#39;s the last day of spring break. After the weekend it&#39;s back to the grind. It really hasn&#39;t been much of a spring break. The rain and the snow made for very little spring and between working on the Hunter / CUNY2X Internship program and reviewing applications for my Hunter Daedalus CS Honors program there has been very little break.
Today was no exception - I spent much of the day working but I did take a few hours to head over to Cornell Tech on Roosevelt Island.</description>
    </item>
    
    <item>
      <title>Tools and Complexity</title>
      <link>https://cestlaz.github.io/posts/tools-and-complexity/</link>
      <pubDate>Thu, 05 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/tools-and-complexity/</guid>
      <description>Alfred Thompson wrote about CS education tools earlier today. I&#39;ve also been meaning to write on the topic but from a different point of view.
I do my best to keep up with the latest and greatest in the CS world both on the academic side as well as the professional one. That&#39;s not really possible, but I do my best. When I have a small project to work on I&#39;ll some times use it as an excuse to play with some recent technology.</description>
    </item>
    
    <item>
      <title>Passover April 1 And Indiana Jones</title>
      <link>https://cestlaz.github.io/posts/passover-april-1-and-indiana-jones/</link>
      <pubDate>Sun, 01 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/passover-april-1-and-indiana-jones/</guid>
      <description>I&#39;ve never done much in terms of the April Fools thing but frequently enjoy other peoples shenanigans.
For those of you similarly inclined I share my son Natan&#39;s take on that Passover staple, Echad Mi Yodea.
Enjoy: A Historically Informed Echad Mi Yodea.</description>
    </item>
    
    <item>
      <title>Do It The Dumb Way</title>
      <link>https://cestlaz.github.io/posts/do-it-the-dumb-way/</link>
      <pubDate>Fri, 30 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/do-it-the-dumb-way/</guid>
      <description>There&#39;s so much to like in the shape drawing lessons I talked about in my refactoring post that I thought I&#39;d share a little more here.
It can be argued that the most important things for a program to do is work. The most clever, elegant, creative program is worthless if it doesn&#39;t produce the desired result. All too often, beginners and hot shot beginners in particular try to be too clever too early and get themselves into trouble.</description>
    </item>
    
    <item>
      <title>Ethics In CS Education</title>
      <link>https://cestlaz.github.io/posts/ethics-in-cs/</link>
      <pubDate>Sun, 25 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/ethics-in-cs/</guid>
      <description>I&#39;ve been meaning to write about ethics in CS education for a while. Probably since I saw this article in the NY Times but got sidetracked.
I was reminded when I saw this tweet by Hadi the other day:
This message is bigger than Facebook. Computer science faces an ethics crisis. That’s why @codeorg covers ethics and digital citizenship in our computer science courses. (And we’re thankful that most of the largest tech companies support us) https://t.</description>
    </item>
    
    <item>
      <title>Sigcse2018 Proof</title>
      <link>https://cestlaz.github.io/posts/sigcse2018-proof/</link>
      <pubDate>Fri, 23 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/sigcse2018-proof/</guid>
      <description>Next up from SIGCSE2018 is Connect the Dots to Prove It presented by Mark McCartin-Lim. This paper was presented during the same papers session as MacCormick paper I wrote up previously and my reaction to this one was similar to my reaction to MacCormick&#39;s.
My reaction to MacCormick was - &#34;This is awesome but while he&#39;s talking about redesigning existing theory courses, I think we can get a lot of mileage out of bringing these ideas into lower level CS courses.</description>
    </item>
    
    <item>
      <title>Refactoring</title>
      <link>https://cestlaz.github.io/posts/refactoring/</link>
      <pubDate>Wed, 21 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/refactoring/</guid>
      <description>One of my laments on teaching computer science is that students are rarely taught and given the chance to develop good programming practices. There&#39;s usually not enough time. Beginners work on small &#34;toys&#34; which don&#39;t lend themselves to good software development practices and later on, there&#39;s so much other material like algorithms, data structures etc. to teach and learn that programming practices usually amount to lines like:
  &#34;Make sure to comment your code.</description>
    </item>
    
    <item>
      <title>Testing Part 2</title>
      <link>https://cestlaz.github.io/posts/testing-part2/</link>
      <pubDate>Sun, 18 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/testing-part2/</guid>
      <description>A few weeks ago I wrote about introducing testing in CS classes, specifically using a testing framework. In that post I talked about the plan but now I can talk about the results.
My class interleaves with Hunter&#39;s CSCI 13500 - Software Analysis and Design I class. One day each week, my students have complete a hands on lab focusing on whatever is being covered in the 13500 class. I decided to use one of those labs as a first foray into testing.</description>
    </item>
    
    <item>
      <title>On Prestigious Competitons And High Schools</title>
      <link>https://cestlaz.github.io/posts/on-prestigious-competitons-and-high-schools/</link>
      <pubDate>Sat, 17 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/on-prestigious-competitons-and-high-schools/</guid>
      <description>The ACM recently announced this year&#39;s winners of the Cutler-Bell Prize in High School Computing. Over on his blog, Alfred Thompson noted that the winners were either from independent or magnet public schools. Alfred also noted that most of the winners of prestigious science competitions like the Regeneron Science Talent Search (nee Intel, nee Westinghouse) were from public magnet schools. In his post, Alfred ruminates on this and wonders &#34;how to we add the flexibility and support to more students at more schools?</description>
    </item>
    
    <item>
      <title>Using Emacs 46 Auto Yasnippets</title>
      <link>https://cestlaz.github.io/posts/using-emacs-46-auto-yasnippets/</link>
      <pubDate>Thu, 15 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-46-auto-yasnippets/</guid>
      <description>The other day I discovered auto-yasnippet, another great package by Oleh Krehel or abo-abo.
It looks like it&#39;s going to be a great way to solve a particular problem that come up now and again.
There are plenty of times when I want to create a number of similar but slightly different blocks of text. The example on the project site is:
count_of_red = get_total(&amp;#34;red&amp;#34;); count_of_blue = get_total(&amp;#34;blue&amp;#34;); count_of_green = get_total(&amp;#34;green&amp;#34;);  You could use multiple cursors, a macro, or other methods to put in the common text but you still have to deal with the parts of each line that are unique, the red, green, and blue.</description>
    </item>
    
    <item>
      <title>Sigcse2018 Making theory more acccesible</title>
      <link>https://cestlaz.github.io/posts/sigcse2018-theory/</link>
      <pubDate>Tue, 13 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/sigcse2018-theory/</guid>
      <description>Next up from SIGCSE 2018 is John MacCormick&#39;s session on Strategies for Baing the CS Theory Course on Non-decision Problems
MacCormicks&#39;s stance is that CS theory is tough the first time around and using non-decision problems is a viable approach to make theory more accessible to beginners. As MacCormick said in his paper:
  ... a decision problem may ask the yes/no question, &#34;Does this graph  have a Hamilton cycle?</description>
    </item>
    
    <item>
      <title>Using Emacs 45 - Company or Autocomplete</title>
      <link>https://cestlaz.github.io/posts/using-emacs-45-company/</link>
      <pubDate>Sun, 11 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-45-company/</guid>
      <description>This is a good time to be an Emacs user. In addition to all of the great packages and tools being developed there seem to be more people regularly blogging and making videos about Emacs than ever before.
Planet Emacsen aggregates a ton of Emcas blogs and Emacs Legend Sacha Chua posts what&#39;s going on in emacs every week on her blog.
on the video front, uncle dave has recently joined the ranks of emacs video producers.</description>
    </item>
    
    <item>
      <title>How my views on education research were shaped</title>
      <link>https://cestlaz.github.io/posts/practitioners-and-researchers/</link>
      <pubDate>Wed, 07 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/practitioners-and-researchers/</guid>
      <description>After reading a couple of comments on my last post where I talked a bit about practitioners vs researchers I thought I&#39;d expand and expound a bit.
While there are education researchers that I very much respect, overall, I&#39;m skeptical of education research. Note that I&#39;m not talking specifically about CS Ed research but rather education research in general.
Let&#39;s go back to the beginning. I entered teaching from industry. Goldman Sachs to be specific.</description>
    </item>
    
    <item>
      <title>Sigcse2018 - Code Tracing</title>
      <link>https://cestlaz.github.io/posts/sigcse2018-code-tracing/</link>
      <pubDate>Tue, 06 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/sigcse2018-code-tracing/</guid>
      <description>Next up from SIGCSE is An Explicit Strategy to Scaffold Novice Program Tracing by Benjamin Xie, Greg Nelson and Andy Ko, presented by Benjamin Xie.
The core of Xie&#39;s presentation was that tracing through code is a good thing and that spending a short amount of time teaching code tracing can lead to improved student outcomes.
The idea is simple. Walk through the code as though you were the computer running your program.</description>
    </item>
    
    <item>
      <title>Using Emacs 44 - An org-mode workflow for application processing</title>
      <link>https://cestlaz.github.io/posts/using-emacs-44-pdf/</link>
      <pubDate>Sat, 03 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-44-pdf/</guid>
      <description>One of my titles at Hunter College is Director of the Daedalus CS Honors program. It&#39;s something like a Hunter specific, CS specific version of the CUNY Macaulay Honors program.
Hunter gives all its students the ability to get a great computer science education at a fraction of the cost of a private institution and if you&#39;re a Daedalus scholar you also get a scholarship, a laptop, special classes (with me :-) ), activities and more.</description>
    </item>
    
    <item>
      <title>Sigcse2018 Bootstrapworld on Creativity in CS classes</title>
      <link>https://cestlaz.github.io/posts/sigcse2018-bootstrap/</link>
      <pubDate>Fri, 02 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/sigcse2018-bootstrap/</guid>
      <description>I really didn&#39;t know what to expect at the Creativity, Customization, and Ownership: Game Design in Bootstrap: Algebra session. I&#39;ve been a big fan of Bootstrep for years and looking at the authors, Emmanuel Schanzer&#39;s been a freind forever. I&#39;ve never met Shriram Krishnamurthi in person but am looking forward to it. We&#39;ve traded emails and blog comments. I&#39;d like to consider him a friend and I certainly respect him and his work even though we frequently disagree around the edges.</description>
    </item>
    
    <item>
      <title>Sigcse2018 - Malloc Lab</title>
      <link>https://cestlaz.github.io/posts/sigcse2018-malloc-lab/</link>
      <pubDate>Thu, 01 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/sigcse2018-malloc-lab/</guid>
      <description>I wasn&#39;t going to go to this session. I started out in a panel on integrating social good into CS Ed. With the panel not meeting my expectations I moved over to my second choice - the system programming sessions where I saw Implementing Malloc: Students and Systems Programming, a paper presented by Brian Railing of CMU.
I really liked both the paper and the talk.
CMU computer science students all take a systems course that uses Computer Systems: A Programmer&#39;s Perspective.</description>
    </item>
    
    <item>
      <title>SIGCSE 2018</title>
      <link>https://cestlaz.github.io/posts/sigcse2018/</link>
      <pubDate>Sun, 25 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/sigcse2018/</guid>
      <description>I just got back from SIGCSE2018 - the big annual conference on computer science education. Although I&#39;ve been in this racket for decades, this was only my second SIGCSE and once again I had a blast.
As with most conferences, a highlight was the &#34;hallway track&#34; where I got to spend time with friends and colleagues from all over the country. I also got to check off a few names from the &#34;</description>
    </item>
    
    <item>
      <title>Using Emacs 43 - Music with MPD</title>
      <link>https://cestlaz.github.io/posts/using-emacs-43-music/</link>
      <pubDate>Tue, 20 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-43-music/</guid>
      <description>I like to listen to music at work. Sometimes I just stream from YouTube, Soundcloud, Spotify or some other online source but if you&#39;re a person of a certain age, like me, you probably have quite an mp3 collection. All those CDs that have been ripped not to mention some converted vinyl.
I used to use the Music Player Daemon or MPD back in the day. It would run in the background and you could connect to it using lots of clients.</description>
    </item>
    
    <item>
      <title>Testing, Testing</title>
      <link>https://cestlaz.github.io/posts/testing-testing/</link>
      <pubDate>Mon, 19 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/testing-testing/</guid>
      <description>With CS4All being the buzzword of the day we&#39;re paying a lot of attention to the fact that when we teach a CS class for all students, most of them won&#39;t end up studying CS or going directly into a tech heavy field.
Among those that do study CS though, there is another division. Those studying CS as an academic exercise or to go on to graduate studies and those who are going in to the tech sector.</description>
    </item>
    
    <item>
      <title>Using Emacs 42 - Git Gutter and Time Machine</title>
      <link>https://cestlaz.github.io/posts/using-emacs-42-git-gutter/</link>
      <pubDate>Sun, 18 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-42-git-gutter/</guid>
      <description>One day I&#39;ll do a Magit video but since there are already some good ones out there I thought I&#39;d share a couple of other great git related packages.
The first is Git Gutter which adds markers on the side gutter of your buffer so you know what&#39;s changed since you&#39;re last commit. I pretty much use it exclusively for that visual but it can also be used to cmmit and revert individual chunks of your changes.</description>
    </item>
    
    <item>
      <title>Using Emacs 41 Pandoc</title>
      <link>https://cestlaz.github.io/posts/using-emacs-41-pandoc/</link>
      <pubDate>Tue, 13 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-41-pandoc/</guid>
      <description>Another Emacs quick hit today. Actually, not really Emacs. Today&#39;s video is a quick, really quick, look at Pandoc. Pandoc is a document converter.
Here are the formats that Pandoc can covert read from:
  Markdown, CommonMark, PHP Markdown Extra, GitHub-Flavored Markdown,  MultiMarkdown, and (subsets of) Textile, reStructuredText, HTML,  LaTeX, MediaWiki markup, TWiki markup, TikiWiki markup, Creole 1.0,  Haddock markup, OPML, Emacs Org mode, DocBook, JATS, Muse, txt2tags,  Vimwiki, EPUB, ODT, and Word docx.</description>
    </item>
    
    <item>
      <title>Google Sheets</title>
      <link>https://cestlaz.github.io/posts/google-sheets/</link>
      <pubDate>Mon, 12 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/google-sheets/</guid>
      <description>I make regular use of Google&#39;s office suite. I use Google forms all the time to collect data, Google docs when I have to leave Emacs for document preparation - usually when I have to collaborate with others online and I use Google Sheets as my greadebook.
I don&#39;t do a lot of data processing using Google sheets. For that I download the data and write small scripts. On the other hand it turns out that you can do some pretty nifty things by scripting right in Google sheets.</description>
    </item>
    
    <item>
      <title>Using Emacs 40 - Atomic Chrome</title>
      <link>https://cestlaz.github.io/posts/using-emacs-40-atomic-chrome/</link>
      <pubDate>Wed, 31 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-40-atomic-chrome/</guid>
      <description>Thanks to everyone who voted for topics or commented with suggestions for videos. I&#39;ll try to get to them in the coming months.
Today is just a quick hit on Atomic Chrome - an Emacs package and browser extension that allows you to edit web form inputs with Emacs.
UPDATE I forgot to mention that you can set a shortcut key, at least in chrome rather than clicking on the icon.</description>
    </item>
    
    <item>
      <title>On Textbooks</title>
      <link>https://cestlaz.github.io/posts/textbooks/</link>
      <pubDate>Sat, 27 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/textbooks/</guid>
      <description>I thought I&#39;d answer Alfred Thompson&#39;s recent post on using textbooks. Like Alfred, I&#39;ve never used textbooks particularly effectively. Even when I taught math I mostly used them as a resource for problems.
I also agree with Alfred in questioning the &#34;flipped class&#34; model or as I like to call it &#34;homework&#34; for reasons similar to Alfred&#39;s.
Even back in the Pascal days of APCS getting textbooks was an ordeal in NYC.</description>
    </item>
    
    <item>
      <title>Is Teaching CS Hard?</title>
      <link>https://cestlaz.github.io/posts/is-teaching-cs-hard/</link>
      <pubDate>Sun, 21 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/is-teaching-cs-hard/</guid>
      <description>Last week, Mark Guzdial asked What does it mean for Computer Science to be harder to learn than other STEM subjects? as a follow up to his ACM Blog post this month and the ensuing discussion.
You should read both posts but here&#39;s how Mark started off the follow up:
  I made an argument in my Blog@CACM Post for this month that “Learning  Computer Science is Different than Learning Other STEM Disciplines,”  and on Twitter, I explicitly added “It’s harder.</description>
    </item>
    
    <item>
      <title>Reading and Writing Recs</title>
      <link>https://cestlaz.github.io/posts/reading-and-writing-recs/</link>
      <pubDate>Thu, 04 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/reading-and-writing-recs/</guid>
      <description>I&#39;ve been on both sides of the recommendation game. I currently read all the recommendations for students who apply to my honors CS program at Hunter and some of the ones written for the Macaulay Honors program. I also read some for the CSTUY summer program. On the other side, I&#39;ve written hundreds if not thousands of recs for seniors when I was teaching at Stuy.
I&#39;ve been meaning to write about recs and when I saw yesterday&#39;s post on AVC.</description>
    </item>
    
    <item>
      <title>APCS-P -  Bigger Intake Or Leaky Pipe</title>
      <link>https://cestlaz.github.io/posts/apcsp-bigger-intake-or-leaky-pipe/</link>
      <pubDate>Mon, 01 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/apcsp-bigger-intake-or-leaky-pipe/</guid>
      <description>Advanced Placement Computer Science got top billing on Alfred Thompson&#39;s Things I&#39;m Watching in 2017 post. Alfred talks about how APCS-P exploded onto the scene and wonders what will happen with APCS this year.
I have some questions as well but mine won&#39;t be answered for years to come, if ever.
Like it or not, the College Board has an out sized influence on K12 education. As long as people are convinced that AP=good there will be a push for more and more AP classes and APCS-P is a perfect class to push.</description>
    </item>
    
    <item>
      <title>Using Emacs 2017 Recap</title>
      <link>https://cestlaz.github.io/posts/using-emacs-2017-recap/</link>
      <pubDate>Fri, 29 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-2017-recap/</guid>
      <description>This past year I recorded 14 Using Emacs videos. This is on top of the 25 videos I made last year. The fall off in production is understandable. I got through my day to day configuration in the late 20s and since then the videos have just been on things I&#39;ve rediscovered, things that became useful and things that I just found interesting. It was also a busier year.
Why did I start the series?</description>
    </item>
    
    <item>
      <title>2017 in review - K12 CS Education</title>
      <link>https://cestlaz.github.io/posts/2017-review-k12csed/</link>
      <pubDate>Wed, 27 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2017-review-k12csed/</guid>
      <description>It&#39;s been a big year for K12 CS education. More and more states looking into CS as a K12 academic area and all that entails, the CS4All movement is well underway and the College Board launched a new exam. These are just three of many big things that happened in the past year.
I&#39;m excited about the overall growth but concerned about a number of issues. I&#39;ve written about all of them in the past so won&#39;t rehash here and in any event, the issues I&#39;m concerned about are issues I have no influence on.</description>
    </item>
    
    <item>
      <title>2017 in review - Hunter Undergraduate CS</title>
      <link>https://cestlaz.github.io/posts/2017-review-hunter-cs/</link>
      <pubDate>Tue, 26 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2017-review-hunter-cs/</guid>
      <description>I usually don&#39;t do year in review posts. At Stuy, not much changed year after year so I never felt it worth summarizing the past and projecting the future. At Hunter, now that I&#39;m a couple of years in, projects are really picking up steam so I think it&#39;s worth talking about them.
One of my two major missions at Hunter was to build a CS Honors program and raise the profile of Hunter&#39;s undergraduate CS program in general.</description>
    </item>
    
    <item>
      <title>Using Emacs 39 - mu4e</title>
      <link>https://cestlaz.github.io/posts/using-emacs-39-mu4e/</link>
      <pubDate>Sun, 24 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-39-mu4e/</guid>
      <description>I generally use three email accounts. My personal one, work one, and one for my non-profit. For a couple of years, I&#39;ve been using mu4e under Emacs for both my work and non-profit email accounts and gmail for my personal account.
 I&#39;ve had lots of requests for a video on what I do but I&#39;ve been hesitant for two reasons: There are parts of my configuration that are copied from others and I really don&#39;t understand.</description>
    </item>
    
    <item>
      <title>Breaking down problems and writing</title>
      <link>https://cestlaz.github.io/posts/whats-next/</link>
      <pubDate>Thu, 14 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/whats-next/</guid>
      <description>This question appeared on Facebook a few days ago:
  Does anyone have an effective way to teach students how to break down  a problem into steps and then solve each step one by one? I think my  students are struggling with a large question and breaking it in  subsequent parts.  There were some good suggestions. I wanted to add something but didn&#39;t have time then so I thought I&#39;d write it up now.</description>
    </item>
    
    <item>
      <title>New York State moving forward with CS Teacher Certification</title>
      <link>https://cestlaz.github.io/posts/ny-cs-certificate/</link>
      <pubDate>Tue, 12 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/ny-cs-certificate/</guid>
      <description>Last April I woke up early and trekked up to Albany along with a few of my Hunter College colleagues to share our thoughts on K12 Computer Science teacher certification with the Board of Regents. We gave a presentation to the Regents Higher Education Committee and afterwards had a chance to talk with some of the Regents as well as other members of the New York State Department of Education.</description>
    </item>
    
    <item>
      <title>Making contest problems and writing tests</title>
      <link>https://cestlaz.github.io/posts/advent-2017-making-tests/</link>
      <pubDate>Mon, 11 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/advent-2017-making-tests/</guid>
      <description>I&#39;m now well behind in Advent of Code. Traveling up to Michigan to see my son and my brother and his family will do that.
I was planning on working to catch up but got distracted earlier by this thread on the Advent of Code subreddit. Specifically this comment by Eric Wastl, the contest creator. The thread is about the level of difficulty of the various problems and Eric&#39;s comment talks about some of the factors that go into creating a good collection of problems for a contest and the difficulties involved.</description>
    </item>
    
    <item>
      <title>Tools can shape how we think</title>
      <link>https://cestlaz.github.io/posts/advent-2017-4-6/</link>
      <pubDate>Wed, 06 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/advent-2017-4-6/</guid>
      <description>I&#39;ve been having fun with this years Advent of Code competition. So far, I&#39;ve been able to keep up but with I expect that to change in another couple of days since I&#39;ll be traveling for the weekend.
After solving a problem, I like looking over some of the other solutions on the Advent of Code subreddit. Even with similar agorithmic solutions there&#39;s a decent amount of variation in the actual code and solutions in different languages can look radically different.</description>
    </item>
    
    <item>
      <title>Thoughts On A Hackathon</title>
      <link>https://cestlaz.github.io/posts/thoughts-on-a-hackathon/</link>
      <pubDate>Sun, 03 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/thoughts-on-a-hackathon/</guid>
      <description>Yesterday I was one of the judges at StuyHacks. A one day hackathon at Stuyvesant run by and organized by the students. I don&#39;t have attendee stats but there were kids from all over the city and at least one team from New Jersey. The youngest student that I met was in sixth grade and the oldest were high school seniors. The judging was at the end but I decided to stop by earlier to see how the hackers were doing.</description>
    </item>
    
    <item>
      <title>Advent of Code 2017 - Day 1</title>
      <link>https://cestlaz.github.io/posts/advent-2017-1/</link>
      <pubDate>Sat, 02 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/advent-2017-1/</guid>
      <description>It&#39;s once again time for Advent of Code. That one a day programming competition that&#39;s been running now for three years.
Here are some thoughts on day 1. The core of the problem is that you have a large string of digits and you have to calculate a checksum. This is done by adding the sum of a subset of the digits. Only the ones that are identical to the digit to their right.</description>
    </item>
    
    <item>
      <title>You have to trust the kids</title>
      <link>https://cestlaz.github.io/posts/trust-the-kids/</link>
      <pubDate>Wed, 29 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/trust-the-kids/</guid>
      <description>A week or so ago I wrote about the event we had to kick off Hunter College&#39;s partnering with the NY tech community to build a Hunter to tech pipeline. Each table had two Hunter students and a group of tech professionals. Each table discussed the Hunter CS experience and how the tech community can help support the students. Towards the end of the event a colleague commented that it was a great idea to have the students essentially run the tables and how effective it was.</description>
    </item>
    
    <item>
      <title>Reunion Season</title>
      <link>https://cestlaz.github.io/posts/reunion-season/</link>
      <pubDate>Sun, 26 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/reunion-season/</guid>
      <description>Thanksgiving is reunion season. Stuyvesant and I&#39;m guessing other high schools traditionally hold their reunions, at least the five and ten year ones over the holiday weekend. It makes sense since grads who&#39;ve moved away might still be coming to town for family celebrations.
This year, I was invited to the Stuy07 ten year reunion. I considered crashing the Stuy97 20 year but it was at the same time and too far away.</description>
    </item>
    
    <item>
      <title>Using Emacs 38 - dired</title>
      <link>https://cestlaz.github.io/posts/using-emacs-38-dired/</link>
      <pubDate>Fri, 24 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-38-dired/</guid>
      <description>The 38th installment of Using Emacs is about dired, Emacs&#39; built in mode for navigating and working with directories.
I&#39;m not a dired power user and in fact am just now making a real effort to explore it and work it into my daily workflow and with that in mind, I&#39;d love to hear some configuration and use suggestions from people who use it regularly.
Here&#39;s the configuration I use:</description>
    </item>
    
    <item>
      <title>Motivating and understanding quicksort</title>
      <link>https://cestlaz.github.io/posts/quick-sort-starting/</link>
      <pubDate>Tue, 21 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/quick-sort-starting/</guid>
      <description>Thks question was posed the other day - how can one get students to truly understand the quicksort algorithm?
I&#39;ve written a few posts about quicksort. The last time I did a lesson writeup on the subject I wrote about first looking and quickselect and then moving to the quicksort. The class was first faced with the problem of writing a routine to find the Kth smallest item in an unsorted data set.</description>
    </item>
    
    <item>
      <title>Hunter CS and NY Tech - it takes a village</title>
      <link>https://cestlaz.github.io/posts/hunter-tech-kickoff/</link>
      <pubDate>Sun, 19 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/hunter-tech-kickoff/</guid>
      <description>One of my goals when I came over to Hunter was to help establish Hunter CS as the place to be for CS in the city. Hunter already had a solid CS program before I joined but it isn&#39;t well known. It also doesn&#39;t have an established tech culture.
It&#39;s an ambitious goal but if it can be done, what a game changer. A lot of people talk about equity, diversity, and social justice but if we can establish Hunter as the place to be for CS in NY, what a win.</description>
    </item>
    
    <item>
      <title>Moocs - High Production value, Bad Questions</title>
      <link>https://cestlaz.github.io/posts/moocs-bad-questions/</link>
      <pubDate>Fri, 10 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/moocs-bad-questions/</guid>
      <description>Most mornings, I start my day with a workout. Sometimes I run, sometimes I use my bike trainer. Dealing with plantar fasciitis since last June, it&#39;s mostly been the bike.
I occupy the time by either watching YouTube videos or catching up on Communications of the ACM or American Scientist. I&#39;m about 6 months behind on both.
Inspired by some talk in one of the CS Ed Facebook groups, I thought I&#39;d use the time to start going through some MOOCs.</description>
    </item>
    
    <item>
      <title>Professional Development beyond Scratch</title>
      <link>https://cestlaz.github.io/posts/election-day-pd-2017/</link>
      <pubDate>Tue, 07 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/election-day-pd-2017/</guid>
      <description>Today was Election Day. One of the few days each year when students stay home and teachers spend all day attending what is generously known as professional development.
Years ago I was in a room with a few colleagues when my friend Dave - one of the best math teachers I know said &#34;you know, every time we have a PD day in NJ and my wife and I have to scramble to take care of the kids I get a little annoyed but then think I shouldn&#39;t get annoyed since they&#39;re spending the day doing all sorts of valuable PD.</description>
    </item>
    
    <item>
      <title>Early Interesting Problems - Happy Ladybugs</title>
      <link>https://cestlaz.github.io/posts/happy_ladybug/</link>
      <pubDate>Mon, 23 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/happy_ladybug/</guid>
      <description>We all love interesting problems. The trouble is that it&#39;s hard to find suitably interesting problems for students when they&#39;re just learning the basics. In the very beginning the problems practically dictate the solution:
 loop over a list and add all the elements or calculate the sum of a list of integers. Determine if number is prime Convert a word into pig-Latin  It&#39;s not that there&#39;s no thought involved in solving these but the students already know the mechanics of solving these by hand so it&#39;s a direct translation into a program.</description>
    </item>
    
    <item>
      <title>Catskills Conf 2017</title>
      <link>https://cestlaz.github.io/posts/catskills-2017/</link>
      <pubDate>Sat, 21 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/catskills-2017/</guid>
      <description>Fall in the northeast is a special time. It&#39;s the apple harvest, the leaves change colors, and the air is crisp and clean. One of the best places to enjoy it is up in the Hudson Valley. That&#39;s why I love going to Catskills Conf each year.
I&#39;ve written about Catksills Conf before and I usually describe it as &#34;light tech conference meets summer camp.&#34; I love the event but I love being able to bring my students even more.</description>
    </item>
    
    <item>
      <title>It&#39;s nice to be appreciated</title>
      <link>https://cestlaz.github.io/posts/nice-appreciated/</link>
      <pubDate>Thu, 19 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/nice-appreciated/</guid>
      <description>Today was my 50th Birthday. I&#39;m usually pretty low key on birthdays and today was no different. I got up, exercised, went to work, taught my class and went back to my office for office hours.
What a great surprise when all of a sudden my students from last year appeared at my office with a Happy Birthday a card and a cake: It felt pretty terrific. I wasn&#39;t expecting this and was really moved.</description>
    </item>
    
    <item>
      <title>There&#39;s always something to learn (from your students)</title>
      <link>https://cestlaz.github.io/posts/when-they-change-the-script/</link>
      <pubDate>Wed, 18 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/when-they-change-the-script/</guid>
      <description>One thing I&#39;ve learned from teaching is that there&#39;s always something new to learn. For the kids, yes, but I&#39;m talking about for the teacher.
The other day, I taught a lesson I&#39;ve taught many times. Find the mode of a data set. That&#39;s the problem that they solve but the lesson is really about run time complexity, hidden complexity and using data structures in alternate ways.
I blogged about this before so you can get an earlier take there although the code isn&#39;t formatted correctly due to blog conversions.</description>
    </item>
    
    <item>
      <title>A test result is just a test result</title>
      <link>https://cestlaz.github.io/posts/ap-results-measure-of-curriculum/</link>
      <pubDate>Sun, 15 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/ap-results-measure-of-curriculum/</guid>
      <description>This past weekend was Catskillsconf - my favorite event of the year. I spent the weekend up in Ulster County with a bunch of my students. some great friends old and new, and Devorah. It was a great weekend but I was mostly offline.
As a result I missed a rather heated discussion in the CS Ed Facebook groups. The debate was over whether or not Strong AP CSP exam results are indicative of a good curriculum or good professional development (PD).</description>
    </item>
    
    <item>
      <title>Standards - Who are they for?</title>
      <link>https://cestlaz.github.io/posts/standards-who-for/</link>
      <pubDate>Tue, 10 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/standards-who-for/</guid>
      <description>The big push at last year&#39;s CSTA conference was the release of the new CSTA K12 standards. It seemed that every other session was pushing them in one way or another. I&#39;ve been meaning to share my thoughts about them or, more specifically, learning standards in general for a while but with announcement about federal funding for CS coming from the White House last week I thought it was time.</description>
    </item>
    
    <item>
      <title>Programming Idioms</title>
      <link>https://cestlaz.github.io/posts/programming-idioms/</link>
      <pubDate>Sun, 08 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/programming-idioms/</guid>
      <description>I just read Jeff Yearout&#39;s recent post titled The Beginner&#39;s Garden of Concepts. Not directly related but it got me thinking about programming idioms.
I&#39;ve been using the phrase &#34;programming idiom&#34; for years to describe a short useful recurring code construct. I didn&#39;t realize that it was officially &#34;a thing&#34; until doing a web search on the phrase years later.
As our students grow from newbies on I think it&#39;s helpful for them to see recurring and related patterns and programming idioms gives us a name to apply to many beginner patterns.</description>
    </item>
    
    <item>
      <title>NYC CS4All - This Is Not The CS We&#39;re Looking For</title>
      <link>https://cestlaz.github.io/posts/this-is-not-the-cs-were-looking-for/</link>
      <pubDate>Fri, 29 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/this-is-not-the-cs-were-looking-for/</guid>
      <description>It&#39;s no secret that I&#39;m something of an old curmudgeon in the K12 CS Education world and I&#39;ve been critical of a number of initiatives and organizations over the years but I&#39;ve been pretty quiet on the CS4All movement in NYC Department of Education. I&#39;ve had and any number of concerns though.
This past week at the inaugural meeting of New York City&#39;s CSTA chapter we got a taste of the NYC CS4All Blueprint.</description>
    </item>
    
    <item>
      <title>Using Emacs 37 - Treemacs file browser</title>
      <link>https://cestlaz.github.io/posts/using-emacs-37-treemacs/</link>
      <pubDate>Sun, 24 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-37-treemacs/</guid>
      <description>I&#39;ve been meaning to get back to making Emacs videos but I&#39;ve been having trouble figuring out what to record.
People have asked for Magit but I only use the basics and I think there are already some great videos on it out there. I&#39;d also like to get more comfortable with DIRED mode and then do a video on it but I&#39;m not there yet. I&#39;ve also been looking into packages that manage workspaces like Eyebrowse and Persp-mode but neither are really doing it for my workflow.</description>
    </item>
    
    <item>
      <title>Awesome Cs Revisited</title>
      <link>https://cestlaz.github.io/posts/awesome-cs-revisted/</link>
      <pubDate>Thu, 21 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/awesome-cs-revisted/</guid>
      <description>Saw this tweet the other day so I though I would try to plug the Awesome CS Education list I started on GitHub:
#csteachers...didn&amp;#39;t I see a list of CS teacher blogs here recently?
&amp;mdash; Pam Whitlock (@PamWhitlock1) September 21, 2017 
To answer the tweet, the closet thing I know to a list is Alfred Thompson&#39;s blog roll which is actually a post he wrote on his blog in 2012.</description>
    </item>
    
    <item>
      <title>New Term New Tool - Thonny, a Python IDE</title>
      <link>https://cestlaz.github.io/posts/new-tool-thonny/</link>
      <pubDate>Thu, 21 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/new-tool-thonny/</guid>
      <description>Last year I wrote about repl.it, an online IDE that supports multiple languages. At the time it had some rudimentary classroom support and since I started using it, repl.it has become better and better. I used it last year with my class because I had to start the year in a lab where I couldn&#39;t easily install my own software. I&#39;ll continue to use repl.it - mostly for it&#39;s ability to schedule publish and manage assignments but when possible, I like having my students work locally.</description>
    </item>
    
    <item>
      <title>I Believe CS Teachers are Smart and Capable</title>
      <link>https://cestlaz.github.io/posts/cs-teachers-smart/</link>
      <pubDate>Fri, 15 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/cs-teachers-smart/</guid>
      <description>People sometimes accuse me of being an elitist CS snob that I feel that CS teachers have to have advanced CS degrees.
It&#39;s not that at all. Rather, I feel that CS teachers are smart and capable. Circumstances frequently result in a teacher in front of a CS class with limited content and pedagogical content knowledge. It&#39;s not ideal but it&#39;s reality. Of course I feel that we should do everything to support and encourage these teachers but we should also insist that after a reasonable period of time, they know their stuff.</description>
    </item>
    
    <item>
      <title>Is the new Secret Sauce ever better?</title>
      <link>https://cestlaz.github.io/posts/is-the-new-secret-sauce-ever-better/</link>
      <pubDate>Fri, 08 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/is-the-new-secret-sauce-ever-better/</guid>
      <description>I read this piece earlier today on Nancy Bailey&#39;s blog.
TL;DR (although it really isn&#39;t too long so you should read it) - it&#39;s on Laurene Powell Jobs, her efforts to &#34;reform&#34; education and why she&#39;s misguided as are most of the well to do non-educators working hard to change and in many cases privatize public education.
Laura posts a nice list of simple, common sense ways to improve education. I&#39;ll repost them here:</description>
    </item>
    
    <item>
      <title>Theseus&#39;s Curriculum</title>
      <link>https://cestlaz.github.io/posts/theseuss-curriculum/</link>
      <pubDate>Tue, 05 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/theseuss-curriculum/</guid>
      <description>With the school year starting I was originally planning on writing about my class rules.
Instead I think I&#39;ll riff on Alfred Thompson&#39;s post today titled Curriculum is Hard. I&#39;m guessing I found curriculum design and development daunting decades ago but at this point in my career it&#39;s something I enjoy. In any event, Alfred got me to thinking - when is a curriculum your own?
If you grab a curriculum complete with lesson plans, assignments; the whole kit and caboodle and you use it verbatim it&#39;s clearly not your curriculum.</description>
    </item>
    
    <item>
      <title>CS Teachers - we need you to blog</title>
      <link>https://cestlaz.github.io/posts/cs-teachers-blog/</link>
      <pubDate>Fri, 25 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/cs-teachers-blog/</guid>
      <description>At this past year&#39;s CSTA conference, a few of us huddled in a corner voiced a very common lament - &#34;it would be great if more CS teachers blogged.&#34; It really would be. We&#39;re still a relatively small community and while there&#39;s some good conversation going on on mailing lists and on Facebook, those aren&#39;t easily discoverable or accessible and in the case of Facebook, there&#39;s a question of ownership and permanence.</description>
    </item>
    
    <item>
      <title>Teaching APCS-A for the first time</title>
      <link>https://cestlaz.github.io/posts/teaching-ap-first-time/</link>
      <pubDate>Wed, 23 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/teaching-ap-first-time/</guid>
      <description>I got an email from a friend the other day. Among other things, he mentioned that he would be teaching APCS-A for the first time this year. He&#39;s a little trepidatious. He knows his stuff but he hasn&#39;t really done much using Java.
I was going to respond in an email but thought I might share here instead.
  TL;DR - for all you APCS teachers who are new or new to Java - learn  your core CS, lean on your resources and support and it&#39;s OK to tell  your kids &#34;</description>
    </item>
    
    <item>
      <title>The Cost of AP Exams</title>
      <link>https://cestlaz.github.io/posts/cost-of-ap-exams/</link>
      <pubDate>Thu, 17 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/cost-of-ap-exams/</guid>
      <description>Now that I&#39;m back from vacation and summer&#39;s winding down I thought I&#39;d start getting back to more classroom related posts. I still have a few summer topics I want to write about -- standards and side projects in particular but I&#39;m also looking forward to talking more about the classroom since, after all, at my core, I&#39;m a teacher. When I saw this article in my inbox this morning I thought I&#39;d talk about it.</description>
    </item>
    
    <item>
      <title>Ethics, Cybersecurity, ethics, curricula  and standards</title>
      <link>https://cestlaz.github.io/posts/cyber-ethics-curricula-standards/</link>
      <pubDate>Wed, 02 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/cyber-ethics-curricula-standards/</guid>
      <description>This morning, I read Alfred Thompson&#39;s post on teaching cybersecurity. as Alfred says, it&#39;s something of a CS Ed buzzword this summer.
Another hot topic in K12 CS Ed this summer is the inclusion of ethics in our CS courses courtesy of efforts like the #ethicalCS twitter chat every Wednesday at 8:00 Eastern time hosted by Saber Khan.
Discussions about both topics include &#34;where should we be doing this?&#34; &#34;What should we be doing?</description>
    </item>
    
    <item>
      <title></title>
      <link>https://cestlaz.github.io/posts/grit-kind-word-gun/</link>
      <pubDate>Mon, 31 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/grit-kind-word-gun/</guid>
      <description>Back in May, I read this post about Angela Duckworth and Grit. Grit has become an education buzzword in the past few years so I figured I should read Duckworth&#39;s book. It took this long because there was a long waiting list at the New York Public Library to get the ebook. I&#39;m still not quite finished with the book but I thought I&#39;d share some of my thoughts on the book and the buzz.</description>
    </item>
    
    <item>
      <title>Using Emacs 36 - A Touch of Elisp</title>
      <link>https://cestlaz.github.io/posts/using-emacs-36-touch-of-elisp/</link>
      <pubDate>Sun, 30 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-36-touch-of-elisp/</guid>
      <description>I&#39;ve been working on a vue.js project this summer. During the school year I really can&#39;t dive into code so it&#39;s been fun.
I&#39;ve already showed you most of the Emacs tools I use for development. Projectile, Ace-Window, IBuffer, Swiper / Ivy and all. One thing I couldn&#39;t easily do was arrange windows the way I wanted.
I&#39;ve been setting up Emacs with one large window and a couple of smaller ones:</description>
    </item>
    
    <item>
      <title>Thoughts on non educator  influences on CS Education</title>
      <link>https://cestlaz.github.io/posts/outside-influences-on-cs-ed/</link>
      <pubDate>Sat, 29 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/outside-influences-on-cs-ed/</guid>
      <description>Yesterday Mark Guzdial blogged about a NY Times piece discussing Silicon Valleys influence on education through Code.org.
Mark questioned the validity of the piece. If you don&#39;t read Mark&#39;s blog and you&#39;re in CS Ed you probably should.
I tried to leave a comment on Mark&#39;s blog - not about the NY Times article but rather my thoughts on why I think it&#39;s important that we remain wary and vigilant to industry and outsiders influence and impact on CS education and on education in general.</description>
    </item>
    
    <item>
      <title>Three strikes and you&#39;re out or third time&#39;s a charm</title>
      <link>https://cestlaz.github.io/posts/three-times/</link>
      <pubDate>Fri, 21 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/three-times/</guid>
      <description>Brenda Wilkerson, Director of CS and IT education for Chicago public schools was one of the keynote speakers at this year&#39;s CSTA conference. During her talk, she made a comment about it taking three times through to get it right so if you&#39;re working hard and struggling in your first year of teaching CS, it&#39;s not the time to give up. Learning to teach takes time.
She&#39;s absolutely correct. I saw this in myself and I&#39;ve seen this in many other young teachers.</description>
    </item>
    
    <item>
      <title>CS Ed advocates should pay attention to greater ed issues</title>
      <link>https://cestlaz.github.io/posts/cs-ed-and-all-ed/</link>
      <pubDate>Tue, 18 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/cs-ed-and-all-ed/</guid>
      <description>For anyone involved in K12 CS education, the past few years have been a wild ride. When I first tried to make inroads in the DOE decades ago I couldn&#39;t get through the door. Now, CS Education is everyone&#39;s darling. It&#39;s really amazing. It&#39;s been a combination of grass roots efforts by teachers, non profit education efforts such as TEALS, advocacy of groups like Code.org and amazing individuals like Fred Wilson who has probably done more to move the needle of CS Ed in NY than any other 10 people combined.</description>
    </item>
    
    <item>
      <title>Observing CS Teachers</title>
      <link>https://cestlaz.github.io/posts/cs-teacher-eval/</link>
      <pubDate>Sat, 15 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/cs-teacher-eval/</guid>
      <description>Another set of tweets god me thinking:
How do we help school administrators help and evaluate CS teachers? asks @lsudol of @CSForAll #csta2017 Many don&amp;#39;t understand CS
&amp;mdash; Alfred Thompson (@alfredtwo) July 10, 2017 
If the current system is any indication, checklists are not the answer
&amp;mdash; Mike Zamansky (@zamansky) July 15, 2017 
I get the intent. CS teachers should be evaluated by people who have some clue about the subject.</description>
    </item>
    
    <item>
      <title>A friendly reminder to use the right language when describing CS</title>
      <link>https://cestlaz.github.io/posts/languages-or-cs/</link>
      <pubDate>Mon, 10 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/languages-or-cs/</guid>
      <description>I was part of this conversation the other day:
When science teachers asked me if I taught AP Java I&amp;#39;d always respond by asking them if they taught AP Microscope.
&amp;mdash; Mike Zamansky (@zamansky) July 7, 2017 
I always use that line to emphasize that I teach CS - a way of thinking and problem solving and looking at the world. The languages we use in our classes are tools to help us communicate ideas not the ends but rather a means.</description>
    </item>
    
    <item>
      <title>Self Certification - not a good idea</title>
      <link>https://cestlaz.github.io/posts/dont-self-certify/</link>
      <pubDate>Fri, 07 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/dont-self-certify/</guid>
      <description>You&#39;ve probably seen an image like this:
It&#39;s what you see when you try to access a secure web site but the web site itself certified itself as being secure.
When people see this on a professional site it sets off all manner of red flags. We feel much more comfortable when go to a site and we don&#39;t see that error. When we see the secure green lock in the url bar indicating that this site is certified through an external trusted source.</description>
    </item>
    
    <item>
      <title>A Plea to AP teachers- don&#39;t measure yourself by your scores</title>
      <link>https://cestlaz.github.io/posts/teachers-you-arent-your-test-scores/</link>
      <pubDate>Thu, 06 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/teachers-you-arent-your-test-scores/</guid>
      <description>AP scores just came out. As usual, I see the posts and take part in conversations where teachers talk about their results. Some are happy about their results, some aren&#39;t, some don&#39;t really care.
I just want to make a plea to all AP teachers out there:
Don&#39;t let your value be dictated by the college board or any other exam.
I never really cared much about my students&#39; actual AP scores.</description>
    </item>
    
    <item>
      <title>CS Teachers - teacher first or content first</title>
      <link>https://cestlaz.github.io/posts/teacher-to-cs-or-cs-to-teacher/</link>
      <pubDate>Tue, 04 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/teacher-to-cs-or-cs-to-teacher/</guid>
      <description>Is it easier to take CS people and teach them to teach or is it easier to take teachers and teach them CS?
The question gets batted around from time to time.
This time via twitter:
Some think it&amp;#39;s easier to teach a teacher to teach CS than to teach a CS pro to teach. @alfredtwo is not one of them https://t.co/QCUP8d8llZ
&amp;mdash; Diane Levitt (@diane_levitt) July 3, 2017</description>
    </item>
    
    <item>
      <title>Using Emacs 35 - Blogging</title>
      <link>https://cestlaz.github.io/posts/using-emacs-35-blogging/</link>
      <pubDate>Tue, 27 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-35-blogging/</guid>
      <description>Very little new Emacs in today&#39;s episode of Using Emacs. The video shows my old blogging workflow and what I&#39;m playing with now.
The only new Emacs covered is the prodigy package which lets you run services under Emacs. I use it to run Nikola&#39;s development server but I think prodigy will also be useful when I start writing that knitting application I promised my wife.
When I started this blog, I used Jekyll.</description>
    </item>
    
    <item>
      <title>On Retaining Teachers</title>
      <link>https://cestlaz.github.io/posts/on-retaining-teachers/</link>
      <pubDate>Sun, 25 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/on-retaining-teachers/</guid>
      <description>Back in February, I shared my thoughts on losing CS teachers to the tech industy. TL;DR - I don&#39;t think it will be a CS Ed problem.
That said, I do think that it will be hard to find good CS teachers but the reason is because it will get harder and harder to find good teachers in general.
There are plenty of reasons why it&#39;s harder to become a career teacher but I don&#39;t want to talk about those today.</description>
    </item>
    
    <item>
      <title>Mayoral Control - only when your guy&#39;s the mayor</title>
      <link>https://cestlaz.github.io/posts/mayoral-control/</link>
      <pubDate>Thu, 22 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/mayoral-control/</guid>
      <description>The hot debate this past week in NY Education circles is Mayoral Control. When I started teaching, New York City schools were controlled by the Board of Education. The board appointed a chancellor. The system was supposed to balance community control as well as some centralized decision making. The system was created in the late 60s and was entrenched through my schooling. By the time I was a teacher I think it was pretty much a given that the system didn&#39;t work.</description>
    </item>
    
    <item>
      <title>Are best practices always the best?</title>
      <link>https://cestlaz.github.io/posts/best-practices-cli/</link>
      <pubDate>Wed, 21 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/best-practices-cli/</guid>
      <description>I&#39;ve been trying to be an active participant on the CS Educators StackExchange. You should try to as well!!!
I answered a question about using the command line which led to a back and forth. I gave an example of something I might do in class to illustrate the power of using the command line and linked to some of my past posts. There was some back and forth in the comments - some of the participants weren&#39;t happy with my code as they felt it was filled with poor coding practices.</description>
    </item>
    
    <item>
      <title>A Community Curated List of CS Education Resources</title>
      <link>https://cestlaz.github.io/posts/awesome-cs/</link>
      <pubDate>Fri, 16 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/awesome-cs/</guid>
      <description>One of the things I mentioned in my post on the CS Educators StackExchange was the fragmentation of resources for CS Educators. My friend and fellow CS teacher Ben pointed out that this is appropriate as we&#39;re so young as a community. He&#39;s absolutely right but until we mature, discover-ability can be a problem. We all have our resources and I for one am frequently surprised when talking to a friend and discovering that they don&#39;t know about a site or a mailing list that I&#39;ve known about for years.</description>
    </item>
    
    <item>
      <title>CS Educators StackExchange</title>
      <link>https://cestlaz.github.io/posts/cs-educators-stackexchange/</link>
      <pubDate>Thu, 15 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/cs-educators-stackexchange/</guid>
      <description>The CS Educators StackExchange is now in public beta. For those of you who are not in tech, StackExchange is a network of question answering sites. StackOverflow is probably the most famous - many peoples go to site for computer science and programming questions and answers.
During this period of public beta the site will be working on defining itself and also on developing a critical mass of users. I hope the site succeeds and I encourage everyone to check it out, ask questions, answer some and let&#39;s all see where this goes.</description>
    </item>
    
    <item>
      <title>Using Emacs - 34 - ibuffer and emmet</title>
      <link>https://cestlaz.github.io/posts/using-emacs-34-ibuffer-emmet/</link>
      <pubDate>Thu, 15 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-34-ibuffer-emmet/</guid>
      <description>A couple of quick, unrelated packages today.
first up, ibuffer. If you keep Emacs open all the time, you&#39;ll start to accumulate buffers. Last time, I talked about using projectile and how that can help when navigating between buffers. IBuffer is another one.
Out of the box, C-x C-b is bound to the Emacs list-buffers** command. It brings up a buffer with all the buffers listed inside it. You can navigate that buffer and hit enter on a particular buffer to go to it.</description>
    </item>
    
    <item>
      <title>Disclosing Bugs - requiring a project roadmap</title>
      <link>https://cestlaz.github.io/posts/disclosing-bugs/</link>
      <pubDate>Tue, 13 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/disclosing-bugs/</guid>
      <description>Over on Facebook, a fellow CS educator 1 made a comment on something he wanted to try with his students this summer: having the students pre-disclose bugs when they submit their projects.
The post was asking for any links to &#34;the literature.&#34; I can&#39;t speak to that but I I&#39;ve done something similar to what the post was asking about so, as per usual, I thought I&#39;d write about it here.</description>
    </item>
    
    <item>
      <title>A* is born</title>
      <link>https://cestlaz.github.io/posts/a-star-is-born/</link>
      <pubDate>Mon, 05 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/a-star-is-born/</guid>
      <description>Over on the CS Educator StachExchange, which is in private beta for a few more days, I saw a post asking about how to introduce the A* search algorithm.
I taught A* as part of the APCS class at Stuy so I thought I&#39;d talk about what I did here.
Some time around mid year, we get to intermediate recursion. This is about the time, give or take, when we talk about the nlogn sorts.</description>
    </item>
    
    <item>
      <title>Python - Editor or IDE</title>
      <link>https://cestlaz.github.io/posts/python-editors/</link>
      <pubDate>Thu, 25 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/python-editors/</guid>
      <description>Earlier today I read Garth Flint&#39;s latest post on choosing a Python environment for his classes. While our classes and populations are different it looks like Garth and I share a lot of thoughts on the subject.
I started to write a comment to leave on Garth&#39;s blog but since it was getting a little long I thought I&#39;d write it up as a post.
The question of development environment can be an important one and can make a big difference.</description>
    </item>
    
    <item>
      <title>Designing a course with constraints</title>
      <link>https://cestlaz.github.io/posts/design-course-with-constraints/</link>
      <pubDate>Fri, 19 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/design-course-with-constraints/</guid>
      <description>One of the hats I wear at Hunter is to build a new CS Honors program and to bring my particular brand of insanity to Hunter College CS as a whole.
Yesterday was my last class for the semester so I thought I&#39;d write a bit about the course.
For the Fall semester, I taught an intro programming course to the entire cohort. For some in the cohort, this was their first exposure to CS.</description>
    </item>
    
    <item>
      <title>It feels good to be helpful</title>
      <link>https://cestlaz.github.io/posts/feels-good-to-be-helpful/</link>
      <pubDate>Wed, 17 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/feels-good-to-be-helpful/</guid>
      <description>I got some nice feedback today from a couple of disparate places. It was another reminder that being a teacher isn&#39;t just about the kids currently in your class but it&#39;s about who you are and everyone you interact with. It&#39;s not just about teaching a subject but rather about helping people get to where they can potentially go.
About a year ago I started putting together a series of posts and videos showing how I use Emacs.</description>
    </item>
    
    <item>
      <title>Learning about VC</title>
      <link>https://cestlaz.github.io/posts/learning_about_vc/</link>
      <pubDate>Fri, 05 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/learning_about_vc/</guid>
      <description>.figure-number { display: none; } 
Yesterday, the Daedalus Scholars were visited by Peter Boyce. Peter&#39;s been a friend for years and is my go to guy when I&#39;m looking talk startups, venture capital and many things tech. Peter&#39;s with General Catalyst Partners and is a co-founder of Rough Draft Ventures - a fund that invests in student entrepreneurs.
I&#39;m teaching Hunter&#39;s first class of Daedalus Scholars - Hunter&#39;s new CS Honors program.</description>
    </item>
    
    <item>
      <title>Using Emacs - 33 - projectile, dumb-jump</title>
      <link>https://cestlaz.github.io/posts/using-emacs-33-projectile-jump/</link>
      <pubDate>Fri, 28 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-33-projectile-jump/</guid>
      <description>If you keep Emacs open all the time you end up accumulating lots of buffers. That can make navigating a little bit awkward.
Projectile is a really nice package that makes navigating in and between projects much easier. I also have counsel-projectile installed.
Here&#39;s my configuration:
;; projectile (use-package projectile :ensure t :config (projectile-global-mode) (setq projectile-completion-system &amp;#39;ivy)) (use-package counsel-projectile :ensure t :config (counsel-projectile-on))  Projectile considers a sub-directory tree to be a project if it&#39;s a git or other source control repo, if it&#39;s created by tool like lein, maven, or sbt, or if you put an empty file named **.</description>
    </item>
    
    <item>
      <title>A new first language? What&#39;s the follow up plan?</title>
      <link>https://cestlaz.github.io/posts/first-language-changing/</link>
      <pubDate>Fri, 21 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/first-language-changing/</guid>
      <description>This morning, Mark Guzdial wrote about Stanford possibly moving away from Java as their intro language. This comes on the heels of a semi-regular thread on one of the lists I&#39;m on asking about what languages are used at assorted colleges around the country. Invariably the Pascal - C++ - Java progression of APCS turns up in these threads.
There are plenty of arguments to be made both for and against pretty much any language or platform.</description>
    </item>
    
    <item>
      <title>GitHub as a tool for education</title>
      <link>https://cestlaz.github.io/posts/sigcse-2017-github-4/</link>
      <pubDate>Tue, 11 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/sigcse-2017-github-4/</guid>
      <description>When I started using git and GitHub with my students it was a natural progression having started with started with CVS and then, as technology changed moving through Subversion and then Mercurial. It was all about using sensible professional software development techniques while making it easier for students to submit work and for me to evaluate their submissions.
Over time, I found that git and GitHub in fact provided some extra support for educators right out of the box.</description>
    </item>
    
    <item>
      <title>A free multi-state clicker with built in redundency</title>
      <link>https://cestlaz.github.io/posts/thumb_clickers/</link>
      <pubDate>Sat, 01 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/thumb_clickers/</guid>
      <description>Last Friday, Mark Guzdial wrote about the woes of using clickers in a class. The amount of effort required to use his school&#39;s approved clicker technology sounds ridiculous so while we need tools to better engage students in large class settings we need better tools that can be integrated into our classes more easily.
I&#39;ve never used clickers. On top of stories like Mark&#39;s, there are a number of problems with using clickers in a public school.</description>
    </item>
    
    <item>
      <title>SIGCSE 2017 - a path to github part 3</title>
      <link>https://cestlaz.github.io/posts/sigcse-2017-github-3/</link>
      <pubDate>Thu, 30 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/sigcse-2017-github-3/</guid>
      <description>I wanted to write this up earlier but, as so frequently happens all my dormant work projects decided it was time to rise up and demand instant attention.
When we left off, we had students pulling code and submitting homework via github.
Form here, it&#39;s an easy step to have them working on a small project in their own repo. In fact, sometimes, I&#39;ll jump right to a two person project where one person creates the repo and invites the other (and me) as a collaborator.</description>
    </item>
    
    <item>
      <title>SIGCSE 2017 - a path to github part 2</title>
      <link>https://cestlaz.github.io/posts/sigcse-2017-github-2/</link>
      <pubDate>Sun, 19 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/sigcse-2017-github-2/</guid>
      <description>Note: Just for some quick context. The process I started to describe in the last post and continue here chronicles what I did at Stuy with high schoolers. Now that I&#39;m at Hunter college, I&#39;m adapting the process but the overarching themes remain the same.
Post starts here: Now that your students have been pulling the classcode repo regularly it&#39;s time to move to the next step - adding and pushing files to a repo.</description>
    </item>
    
    <item>
      <title>SIGCSE 2017 - a path to github part 1</title>
      <link>https://cestlaz.github.io/posts/sigcse-2017-github-1/</link>
      <pubDate>Thu, 16 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/sigcse-2017-github-1/</guid>
      <description>Both at and prior to SIGCSE 2017, I promised to write up the steps I take to introduce and use revision control systems in my classes.
This series is not meant to be a git or GitHub tutorial. There are plenty of those already (two of which I&#39;ve linked to below). This is about the process I use with my students to get them up to speed.
As with any new tool, there will be some resistance but once git saves them once, they get religion.</description>
    </item>
    
    <item>
      <title>SIGCSE 2017 - Recap</title>
      <link>https://cestlaz.github.io/posts/sigcse-2017-recap/</link>
      <pubDate>Tue, 14 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/sigcse-2017-recap/</guid>
      <description>As a high school teacher, I was never able to attend SIGCSE, the conference of the ACM&#39;s Special Interest Group on Computer Science Education. Between the number of instructional days I would lose and the cost, I could never justify going. Instead I looked over the proceedings and read many of the papers.
 Now that I&#39;m at Hunter, I was finally able to attend. This year in Seattle, the conference ran from Wednesday through Saturday.</description>
    </item>
    
    <item>
      <title>SIGCSE 2017</title>
      <link>https://cestlaz.github.io/posts/sigcse-2017/</link>
      <pubDate>Tue, 07 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/sigcse-2017/</guid>
      <description>Tomorrow morning I fly out to Seattle for SIGCSE 2017. For those of you not in the CS Education space, SIGCSE is the ACM (Association for Computing Machinery) special interest group for computer science education.
I&#39;ve wanted to go for years but have never been able. It&#39;s hard for a high school teacher to miss a week in mid March, particularly in places with a school calendar similar to New York.</description>
    </item>
    
    <item>
      <title>Whiteboard interviews</title>
      <link>https://cestlaz.github.io/posts/whiteboard-interviews/</link>
      <pubDate>Sun, 05 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/whiteboard-interviews/</guid>
      <description>A few days ago, I saw a piece on David Heinemeier Hansson&#39;s tweet on whiteboard interviews:
&amp;lt;p&amp;gt; &amp;lt;blockquote class=&amp;quot;twitter-tweet&amp;quot; data-lang=&amp;quot;en&amp;quot;&amp;gt;&amp;lt;p lang=&amp;quot;en&amp;quot; dir=&amp;quot;ltr&amp;quot;&amp;gt;Hello, my name is David. I would fail to write bubble sort on a whiteboard. I look code up on the internet all the time. I don&amp;amp;#39;t do riddles.&amp;lt;/p&amp;gt;&amp;amp;mdash; DHH (@dhh) &amp;lt;a href=&amp;quot;https://twitter.com/dhh/status/834146806594433025&amp;quot;&amp;gt;February 21, 2017&amp;lt;/a&amp;gt;&amp;lt;/blockquote&amp;gt; &amp;lt;/p&amp;gt; &amp;lt;p&amp;gt; &amp;lt;script async src=&amp;quot;//platform.twitter.com/widgets.js&amp;quot; charset=&amp;quot;utf-8&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;/p&amp;gt;  I&#39;m not a huge fan of the whiteboard interview but I think many of the tweets missed the point.</description>
    </item>
    
    <item>
      <title>Using Emacs - 32 - C&#43;&#43;</title>
      <link>https://cestlaz.github.io/posts/using-emacs-32-cpp/</link>
      <pubDate>Sat, 04 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-32-cpp/</guid>
      <description>This video is specifically for my students or any students out there who are starting with C++ and emacs. The videos also longer than usual, coming in at a little over 20 minutes.
The big difference is instead of building on my existing config, the code at the bottom is a complete standalone configuration. It&#39;s all pulled from the main config with one additional package.
By taking the code at the bottom and putting in into a file named init.</description>
    </item>
    
    <item>
      <title>Using Emacs - 31 - elfeed part 3 - macros</title>
      <link>https://cestlaz.github.io/posts/using-emacs-31-elfeed-3/</link>
      <pubDate>Wed, 01 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-31-elfeed-3/</guid>
      <description>In part 2 I talked about how I used Hyrdas to quickly navigate through elfeed tags. It was a nice step up but the fact that I still had to manually edit my configuration code for every new tag to update the hydra was a problem.
Basically, I had to somehow or other, take a list of all the active tags and with it build a defhydra command that will then make my Hydra.</description>
    </item>
    
    <item>
      <title>Will we lose CS teachers to industry?</title>
      <link>https://cestlaz.github.io/posts/draft-will-we-lose-cs-teachers-to-industry/</link>
      <pubDate>Mon, 27 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/draft-will-we-lose-cs-teachers-to-industry/</guid>
      <description>If we properly prepare CS teachers, won&#39;t they just jump ship and take  tech industry jobs?  I hear that a lot.
Tech pays big. Teaching? Not so much. Tech workers are respected and have flexible jobs. Teaching? Again, not so much.
Those chanting these refrains advocate the current simple teacher &#34;training&#34; - scripted lessons, minimal pedagogical content knowledge, even less real content knowledge. That will keep them in the classroom.</description>
    </item>
    
    <item>
      <title>Using Emacs - 30 - elfeed part 2 - Hydras</title>
      <link>https://cestlaz.github.io/posts/using-emacs-30-elfeed-2/</link>
      <pubDate>Sat, 25 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-30-elfeed-2/</guid>
      <description>In part 1, I talked about elfeed, a really awesome feed reader for emacs. Generally, I&#39;m really liking it but there&#39;s been one problem - not being able to navigate quickly between groups of feeds with a keystroke or two.
It&#39;s emacs so there has to be a solution.
Enter hydra - a terrific emacs package from the same guy who brought us swiper, another one of my favorite emacs packages.</description>
    </item>
    
    <item>
      <title>Using Emacs - 29 -elfeed part 1</title>
      <link>https://cestlaz.github.io/posts/using-emacs-29-elfeed/</link>
      <pubDate>Wed, 22 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-29-elfeed/</guid>
      <description>Since the demise of Google Reader, I&#39;ve been using Feedly to read my streams. Feedly&#39;s a nice product and it&#39;s been working well for me for quite some time.
A few days ago, I decided to see what emacs had to offer on the feed reader front. One solution was Gnus but then I&#39;ve never been able to get my head around Gnus. Another was elfeed.
I thought I&#39;d give elfeed a go.</description>
    </item>
    
    <item>
      <title>Quality Devs and Coding Contests</title>
      <link>https://cestlaz.github.io/posts/quality-devs-and-coding-contests/</link>
      <pubDate>Sun, 19 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/quality-devs-and-coding-contests/</guid>
      <description>I&#39;ve been planning to put together a response to Alfred Thompson&#39;s recent post - Software Developers - Quantity vs Quality.
TL;DR, although it isn&#39;t really long and I do encourage you to read Alfred&#39;s post: a couple of articles talk about how the U.S. has the most people entering CS competitions like HackerRank but Americans are not at the top of the leaderboard. does this mean that there&#39;s less talent in America?</description>
    </item>
    
    <item>
      <title>Starting with scheme</title>
      <link>https://cestlaz.github.io/posts/staring-with-scheme/</link>
      <pubDate>Wed, 15 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/staring-with-scheme/</guid>
      <description>Scheme is one of the languages used in Stuy&#39;s intro CS course. Like any other language, there are pros and cons of using it to introduce students to CS. Here are some of the reasons why I like Scheme as a first language and why despite that, I don&#39;t recommend it in many cases.
Scheme certainly isn&#39;t mainstream. That&#39;s not the main reason why I like it but it is a side benefit.</description>
    </item>
    
    <item>
      <title>Selecting a starting language - why not Javascript</title>
      <link>https://cestlaz.github.io/posts/starting-with-js/</link>
      <pubDate>Mon, 13 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/starting-with-js/</guid>
      <description>I was catching up with the team at Stuy the other day and they mentioned that they were periodically getting pushback on their choice of languages, particularly in the intro class. The pushback was mostly in the form of &#34;why don&#39;t you start them with Javascript?&#34;
Back in the day, when I created our intro class where we use Scheme, NetLogo and then later Python, I&#39;d get similar pushback but then it was &#34;</description>
    </item>
    
    <item>
      <title>Using Emacs - 28 -Rectangles</title>
      <link>https://cestlaz.github.io/posts/using-emacs-28-rectangles/</link>
      <pubDate>Thu, 09 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-28-rectangles/</guid>
      <description>One of my favorite but little used emacs features is rectangular editing. It&#39;s little used because I don&#39;t need it all that often. It&#39;s one of my favorites because when I do need it, it&#39;s just so amazingly useful.
The idea is you can mark a rectangle of text, cut it and later paste it. This means that if you have three columns of text:
a b c d e f g h i j k l  You can easily mark the middle column (b e h k) or even just the b e and h, cut it and paste it elsewhere as a rectangle.</description>
    </item>
    
    <item>
      <title>A Ground Hog Day Story</title>
      <link>https://cestlaz.github.io/posts/ground-hog-day/</link>
      <pubDate>Tue, 07 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/ground-hog-day/</guid>
      <description>This post has nothing to do with computer science, teaching, education, policy or any of the other typical Cestlaz topics.
Natan wrote this last week and it really gave me a chuckle.
I thought some of you might enjoy it so here it is:
UPDATE Apparently, if you view this on mobile it asks if you want to download the story every time so I changed it from an inline iframe to a link:</description>
    </item>
    
    <item>
      <title>Should CS Ed be in bed with the College Board</title>
      <link>https://cestlaz.github.io/posts/cs-ed-in-bed-college-board/</link>
      <pubDate>Sat, 04 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/cs-ed-in-bed-college-board/</guid>
      <description>I&#39;m guessing my views on this aren&#39;t very popular -that&#39;s OK, every community needs a curmudgeon.
A few years ago, I cautioned if we weren&#39;t careful, once the big players got involved, CS Ed would go the way of other disciplines, and not in a good way. It looks like indeed we&#39;re well on our way down that road.
I&#39;ve ranted before about things like non-profits, drop in and summer programs.</description>
    </item>
    
    <item>
      <title>It&#39;s not one issue, it&#39;s the President and his enablers</title>
      <link>https://cestlaz.github.io/posts/trump-issues/</link>
      <pubDate>Sun, 29 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/trump-issues/</guid>
      <description>Like many of my fellow bloggers and tweeters, I generally keep this site clear of political issues with the exception of those that are directly related to education.
Also, like many of my fellow bloggers and tweeters, this week has provided a reason to break with that tradition.
Many people, including some friends, all more eloquent than I have already posted, tweeted, and Facebooked about the behavior of our President and government.</description>
    </item>
    
    <item>
      <title>Using Emacs - 27 - shell and eshell</title>
      <link>https://cestlaz.github.io/posts/using-emacs-27-shell/</link>
      <pubDate>Fri, 27 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-27-shell/</guid>
      <description>While I use emacs for all all sorts of things, one of the things I haven&#39;t done much is run shells from within emacs. I&#39;m not sure why. I&#39;m a command line wonk and adding command line goodness and emacs together seems like a natural. Maybe it&#39;s because back in the day I spent a lot of time on MS-DOS systems. You could get a reasonable Unixy facsimile using tools like the MKS toolkit and I like so many other young computer scientists wrote our own small shells when we learned C so I used that insted of command.</description>
    </item>
    
    <item>
      <title>Essential topics for an intro course (not)</title>
      <link>https://cestlaz.github.io/posts/essentials-for-an-intro-course/</link>
      <pubDate>Mon, 09 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/essentials-for-an-intro-course/</guid>
      <description>What essential topics should we teach in our intro courses? This seems to be a recurring topic recently.
It can be an important topic but, unfortunately, too often, it seems that people have too myopic a view
I remember thinking about this years ago when APCS moved from C++ to Java. Both languages have good and bad points both for practical and educational use. A big loss in the move to Java was memory management and the topics you could cover when memory issues arose.</description>
    </item>
    
    <item>
      <title>Using Emacs - 26 - Google Calendar, Org Agenda</title>
      <link>https://cestlaz.github.io/posts/using-emacs-26-gcal/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-26-gcal/</guid>
      <description>A while ago I did a couple of videos on how I use org-capture (part 1, part 2). I didn&#39;t get into a big part of org-capture - how I use org-mode and capture to manage my calendar and todo lists.
I was waiting to see if I liked my current setup - using org-gcal to sync with my Google Calendar for appointments while using my main org file for my todo list.</description>
    </item>
    
    <item>
      <title>BS? - BA - addendum</title>
      <link>https://cestlaz.github.io/posts/ba-bs2/</link>
      <pubDate>Mon, 02 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/ba-bs2/</guid>
      <description>Over on Facebook, a friend commented on my last post. He commented on the rigor of BA vs BS degrees. The comment mentioned Physics and Math degrees but I thought Id follow up a bit on CS degrees.
I took a quick look at three computer science programs - Cornell, UMich, and Queens College. Cornell because my daughter is there, UMich, my son, and Queens College because it&#39;s a CUNY college that offers both a BS and a BA in computer science.</description>
    </item>
    
    <item>
      <title>BS? - BA</title>
      <link>https://cestlaz.github.io/posts/ba-bs/</link>
      <pubDate>Sun, 01 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/ba-bs/</guid>
      <description>I didn&#39;t know Hunter College had computer science.  I heard that refrain more than once during my fall visits to high schools. Part of the reason for this is due to Hunter CS&#39;s low profile and small size in spite of its high quality.
Part, though, was also because of some misconceptions about Computer Science programs. I&#39;d hear things like &#34;but they only offer a BA not a BS,&#34;</description>
    </item>
    
    <item>
      <title>Using Emacs - 25 - Tramp</title>
      <link>https://cestlaz.github.io/posts/using-emacs-25-tramp/</link>
      <pubDate>Mon, 26 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-25-tramp/</guid>
      <description>Today&#39;s video talks about using emacs Tramp mode.
Tramp mode allows you to edit remote files using your local emacs. I usually do this over ssh.
To edit a file on a machine www.cstuy.org I would first **find-file** using C-c C-f and then for the file name to open:
/ssh:www.cstuy.org:/home/zamansky/sc/testfile  this would open the file testfile in the absolute directory **/home/zamansky/sc**. If my username on the remote machine is different:</description>
    </item>
    
    <item>
      <title>Being productive between terms</title>
      <link>https://cestlaz.github.io/posts/between-semesters/</link>
      <pubDate>Tue, 20 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/between-semesters/</guid>
      <description>We&#39;re now at the end of my first semester at Hunter. The Spring term classes don&#39;t start until the end of January. I&#39;ve got an assortment of projects to work on but some of the students should have a nice block of relatively free time.
I wanted to share some recommendations on things to explore with a few student groups and thought it would be easier to write those recommendations down here once and then just share a link.</description>
    </item>
    
    <item>
      <title>It gets easier (or advent of code 2016 day 19)</title>
      <link>https://cestlaz.github.io/posts/it-gets-easier-advent19/</link>
      <pubDate>Mon, 19 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/it-gets-easier-advent19/</guid>
      <description>Today&#39;s Advent of Code problem was a variant on the Josephus problem.
I recalled that there was a formula to figure out the sole survivor but I decide to run a simulation rather than looking it up. I also decided to write it up in C++, well, really C with cout instead of printf.
Part 1 was the traditional problem. Part 2 was a variant where at each iteration, you remove the elf opposite the elf being processed (see the problem description for details).</description>
    </item>
    
    <item>
      <title>A couple of things I learned from Danny Jaye</title>
      <link>https://cestlaz.github.io/posts/danny_jaye/</link>
      <pubDate>Sun, 18 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/danny_jaye/</guid>
      <description>I got an email from my good friend and mentor this weekend. Danny Jaye, after 45 years, is finally retiring for real.
Danny, the Maestro, or Doc, as we sometimes called him spent most of his career at Stuyvesant. First as a math teacher, then math chair. Danny also spent time as the director of the Bergen Academies and his last few years as the Chief Academic Officer at Solomon Schecter in Bergen.</description>
    </item>
    
    <item>
      <title>Rookie Season Redux</title>
      <link>https://cestlaz.github.io/posts/rookie-season-redux/</link>
      <pubDate>Mon, 12 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/rookie-season-redux/</guid>
      <description>Today was the last day of classes at Hunter thus ending my first semester of teaching at Hunter College.
I very much enjoyed the semester and my class and look forward to working with the same group when the spring term starts in a few weeks.
At the same time, even though I&#39;m a quarter century veteran teacher, in many ways this was like my rookie season all over again.</description>
    </item>
    
    <item>
      <title>Advent of Code 2016 - Check your data</title>
      <link>https://cestlaz.github.io/posts/advent-of-code-2016-check-data/</link>
      <pubDate>Sat, 10 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/advent-of-code-2016-check-data/</guid>
      <description>I&#39;m spending the weekend up in Michigan. Visiting my brother and is family. We&#39;re here to see the UMGASS production of Gilbert and Sullivan&#39;s The Sorcerer. Batya also came up from Cornell to join us so the two families are all togehter for the first time in about 10 years.
This hasn&#39;t left much time for Advent of Code but I did manage to finish yesterday&#39;s challenge this morning.
What took me so long?</description>
    </item>
    
    <item>
      <title>A Teacher looks at Advent of Code 2016 #2</title>
      <link>https://cestlaz.github.io/posts/advent-of-code-2016-2/</link>
      <pubDate>Thu, 08 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/advent-of-code-2016-2/</guid>
      <description>Today we&#39;re looking at Advent of Code 2016 number 2.
To change things up, I thought I&#39;d do a video where I live code a solution.
The solution I present is pretty straightforward - use a 2D array (or technically, an array of strings) to represent the keypad, parse the input, and follow the input instructions to build the code.
One of the things I really like about Advent of Code is that every problem has two parts and depending on how you solved part 1, you may or may not have extra work to do for part 2.</description>
    </item>
    
    <item>
      <title>A Teacher looks at Advent of Code 2016 #1</title>
      <link>https://cestlaz.github.io/posts/advent-of-code-2016-1/</link>
      <pubDate>Tue, 06 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/advent-of-code-2016-1/</guid>
      <description>I recently posted about Advent of Code - a series of programming problems relseased one a day. While they vary in terms of level of difficulty, a number of them make nice problems for introductory to mid level programming classes.
I thought I&#39;d share some of my thoughts on a few of them starting with the first problem from this years competition.
Take a minute to read it over.
At first glance, it might seem to a young programmer that this problem requires a two dimensional array - all about (x,y) coordinates but then there&#39;s a problem - there are no limits on coordinates and we can&#39;t make an unlimited size array.</description>
    </item>
    
    <item>
      <title>Advent of Code 2016</title>
      <link>https://cestlaz.github.io/posts/advent-of-code-2016/</link>
      <pubDate>Sat, 03 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/advent-of-code-2016/</guid>
      <description>Once again, it&#39;s time for Advent of Code - a series of small programming problems released once a day.
I wrote a bit about it last year and you can still find last years problems here.
It&#39;s only day three but so far, all of the problems look really nice for students in APCS-A or any similar intro course. I&#39;m thinking of looking at a couple of the problems this week with my class at Hunter.</description>
    </item>
    
    <item>
      <title>Using Emacs - 24 - Org Capture 2</title>
      <link>https://cestlaz.github.io/posts/using-emacs-24-capture-2/</link>
      <pubDate>Sat, 03 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-24-capture-2/</guid>
      <description>Not much in today&#39;s actual post. The video is a continuation of the last one on org-capture.
The video goes over how I set things up to pop up a new frame to do a capture even if emacs isn&#39;t on screen (as long as it&#39;s running) by hitting F1. I would have preferred to bind to C-c c - the same as within emacs but I havn&#39;t figured out how to do that in Ubuntu or Mint Linux yet.</description>
    </item>
    
    <item>
      <title>Selling out or getting a seat at the table</title>
      <link>https://cestlaz.github.io/posts/selling-out-or-a-seat-at-the-table/</link>
      <pubDate>Wed, 30 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/selling-out-or-a-seat-at-the-table/</guid>
      <description>The other day, a friend posited a question on Facebook (paraphrased):
  If called upon, would you take a job in an administration who&#39;s policies you strongly  disagreed with?  Would you go work for an administration that you reviled in order to get a seat at the table? To try to affect change from the inside or would you consider yourself a sellout or worse, publicly promote positions you disagree with.</description>
    </item>
    
    <item>
      <title>Using Emacs - 23 - Org Capture 1</title>
      <link>https://cestlaz.github.io/posts/using-emacs-23-capture-1/</link>
      <pubDate>Tue, 29 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-23-capture-1/</guid>
      <description>Org mode has an amazing feature - org-capture. I only started using it recently but it&#39;s really awesome.
What took me so long?
Probably that the manual seemed a little intimidating.
It really isn&#39;t hard, though. Combined with what I&#39;ll go over in the next video and post (and a future one for Google calendar sync) it&#39;s what I use for:
 recording blog ideas managing bookmarks taking short Notes managing my calendar.</description>
    </item>
    
    <item>
      <title>Inverted Index Project</title>
      <link>https://cestlaz.github.io/posts/inverted-index/</link>
      <pubDate>Sat, 26 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/inverted-index/</guid>
      <description>I haven&#39;t spoken much about the class I&#39;ve been teaching this semester. It&#39;s an intro CS course - a programming heavy intro. I decided to use Python with a transition at the end to C++. The transition is to mirror Hunter&#39;s normal first CS course that ends with a C++ intro to prepare the students for next semester&#39;s CS course which is a more intense OOP class using C++ - the language we use in our core courses.</description>
    </item>
    
    <item>
      <title>Evaluate teachers like they do in the real world</title>
      <link>https://cestlaz.github.io/posts/evaluating-teachers/</link>
      <pubDate>Sat, 19 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/evaluating-teachers/</guid>
      <description>This old article has been reposted a few times in my circles over the past few weeks http://educationnext.org/facadeofexcellence/. It&#39;s from 2003 and complains about the lack of flexibility schools had back then with regard to hiring and salary. The article is old and out of date and the seniority system no longer holds for hiring but it does for lay offs. The salary scale from back then, though, is still in place.</description>
    </item>
    
    <item>
      <title>Using Emacs - 21 - web mode</title>
      <link>https://cestlaz.github.io/posts/using-emacs-21-web-mode/</link>
      <pubDate>Wed, 16 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-21-web-mode/</guid>
      <description>Quick post today.
The video goes over web-mode - my preferred weapon for html and all the goodies you embed in an html file.
It&#39;s multi-modal so it acts sensibly regardless of wether you&#39;re editing html, css, javascript or even templates in a single file.
Note: In the video, web-mode wasn&#39;t automatically inserting quotes. I had to set hte following variable to fix this:
(setq web-mode-enable-auto-quoting t)  Giving the final configuration I&#39;m currently using:</description>
    </item>
    
    <item>
      <title>Using Emacs - 22 - emacsclient</title>
      <link>https://cestlaz.github.io/posts/using-emacs-22-emacsclient/</link>
      <pubDate>Wed, 16 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-22-emacsclient/</guid>
      <description>Another quick hit today.
This video is really setting the stage for hte next two, where I talk about org-mode capturing.
Today, we&#39;re demoing the use of the emacs server and client.
Back in the old days, emacs took a LOOONG time to load. A complex conviguration could take on the order of 10 to 20 seconds. This resulted in people loading emacs at the start of the day and leaving it up forever.</description>
    </item>
    
    <item>
      <title>Using Emacs - 20 - yanking</title>
      <link>https://cestlaz.github.io/posts/using-emacs-20-yanking/</link>
      <pubDate>Sun, 13 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-20-yanking/</guid>
      <description>Today&#39;s video is a bit of a follow up on the last one as well as a few miscillaneous configuration.
We got some comments on alternate ways to load a file if it exists - it&#39;s always cool to see how different people end up doing similar things.
We then talk about three little configurations. Two I found out about reading Jon Sander&#39;s (jcs) blog Irreal. Jon&#39;s blog is a terrific source of emacs info - if you don&#39;t subscribe, you should.</description>
    </item>
    
    <item>
      <title>Science Talent Search winners do not a great school make</title>
      <link>https://cestlaz.github.io/posts/dont-focus-on-sts/</link>
      <pubDate>Fri, 11 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/dont-focus-on-sts/</guid>
      <description>Over on Facebook, my Alma Mater and long time employer, Stuyvesant High School seems to be making a big push to up it&#39;s Regeneron Science Talent Search game. For those of you who aren&#39;t familiar, that&#39;s the latest incarnation of the Westinghouse Science Talent Search from back in my day.
It seems that Stuyvesant hasn&#39;t had that many semi finalists, finalists, and winners over the past few years and isn&#39;t happy about it.</description>
    </item>
    
    <item>
      <title>Using Emacs - 19 - moving to a live config</title>
      <link>https://cestlaz.github.io/posts/using-emacs-19-live/</link>
      <pubDate>Thu, 10 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-19-live/</guid>
      <description>Some of the videos I want to make are going to be much easier to do if I&#39;m working in my own account where my whole file tree is available.
It&#39;s also a little annoying changing between my full emacs config and the one I&#39;m developing here.
So, I decided to move to this config for my real config and as I make more videos move parts of my old configuration over to this new one.</description>
    </item>
    
    <item>
      <title>Flask - deploying to DigitalOcean</title>
      <link>https://cestlaz.github.io/posts/digitaloceanflask/</link>
      <pubDate>Tue, 08 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/digitaloceanflask/</guid>
      <description>This post points to the next three videos in the Flask series.
The first covers setting up a droplet (virtual server) on DigitalOcean. The second, deploying a flask application using Green Unicorn, and the third, using sshfs to remotely mount your files from your DO box to your local machine and how to set up DNS using FreeDNS.
To help you on your way with DigitalOcean, here are links to a few of their tutorials</description>
    </item>
    
    <item>
      <title>Using Emacs - 18 - Narrowing and iedit</title>
      <link>https://cestlaz.github.io/posts/using-emacs-18-narrow/</link>
      <pubDate>Wed, 02 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-18-narrow/</guid>
      <description>I meant to cover these last time but decided not to so as to keep the videos to about 10 minutes each.
First up this time round is iedit - a really cool mode that lets you select all the instances of the marked selection at the same time and edit them all at once. By default it&#39;s bound to C-l.
For example, let&#39;s say you had the following code:</description>
    </item>
    
    <item>
      <title>Cornell Technion Project Studio</title>
      <link>https://cestlaz.github.io/posts/cornell-tech-proj-studio/</link>
      <pubDate>Tue, 01 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/cornell-tech-proj-studio/</guid>
      <description>I spent this evening as a crit advisor for this semesters Project Studio. The class is basically a finishing class for their Masters students. The class forms teams that work with a &#34;company champion&#34; that acts an advisor to build a product.
As a Crit Advisor, I, along with two other people from the tech industry have a give and take with three groups and hopefully we can provide useful feedback.</description>
    </item>
    
    <item>
      <title>Halloween 2016</title>
      <link>https://cestlaz.github.io/posts/halloween-2016/</link>
      <pubDate>Mon, 31 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/halloween-2016/</guid>
      <description>It&#39;s Halloween and for the first time in 21 years, I&#39;m not at work in costume.
It all began as a lark in October 1994:
 
And grew from there. A partial list of characters include:
 Groo the Wanderer, Little Ceaser (Pizza Pizza) The Jolly Green Giant Homer Simpson (with my seniors as the rest of the cast) Duffman Hans and Franz (with Boris) The Hulk The Blues Brothers (with JonAlf) Dr.</description>
    </item>
    
    <item>
      <title>Why Hunter CS is so important to NYC</title>
      <link>https://cestlaz.github.io/posts/hunter-cs-important/</link>
      <pubDate>Sun, 30 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/hunter-cs-important/</guid>
      <description>If you know me you know that my morning reads include a visit over to avc.com, Today, Fred&#39;s post talked about development and progress, evolution, if you would, in the city. Although not directly related, it got me thinking about gentrification.
To me, gentrification all too often seems to result in pushing out people and business that were there during the hard times.
We don&#39;t need to force out long time residents that can no longer make rent - we need to uplift communities with pathways to towards greater economic opportunity.</description>
    </item>
    
    <item>
      <title>Using Emacs - 17 - misc small packages</title>
      <link>https://cestlaz.github.io/posts/using-emacs-17-misc/</link>
      <pubDate>Fri, 28 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-17-misc/</guid>
      <description>I&#39;m working on getting enough of my real configuration into this series so that I can dump my current one and use this one all them time and grow it back up an episode at a time.
I think we&#39;re almost there.
This time, we&#39;re looking at a few small packages that I use all the time.
Highlight line Mode (global-hl-line-mode t)  this turns on highlight line mode. It makes it easy to see the line the cursor&#39;s on.</description>
    </item>
    
    <item>
      <title>Knitting at a Tech Conference</title>
      <link>https://cestlaz.github.io/posts/knitting-tech-conference/</link>
      <pubDate>Tue, 25 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/knitting-tech-conference/</guid>
      <description>This past weekend was Catskills Conf, one of my favorite events of the year.
Last year, Devorah joined me and also enjoyed the show.
If you know my wife, you know she&#39;s always knitting. Ok, not true, she&#39;s always knitting, spinning, weaving or performing some other form of fiber craft.
I can&#39;t complain. That&#39;s how I ended up with my Kandinsky, Dust Puppy and Yoda sweaters and my awesome Kang and Kodos socks.</description>
    </item>
    
    <item>
      <title>Waking up in the Hudson Valley</title>
      <link>https://cestlaz.github.io/posts/catskillsconf-2016/</link>
      <pubDate>Sun, 23 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/catskillsconf-2016/</guid>
      <description>Waking up to a beautiful brisk morning at the Ashokan Center in the Hudson Valley.
Last year, Devorah and I attended the first Catskillsconf, a tech conference in Olivebridge, NY. It was an amazing and unique experience. I can only describe it as Tech Conference meets Summer camp. Where else can you hear talks by people like Dennis Crowley and an alos hear the music of Mike and ruthy.
This year, I gave another educaiton rant and to add to the fun, Devorah&#39;s been leading a knitting for Charity project and teaching attendees to knit:</description>
    </item>
    
    <item>
      <title>Installing Flask in a virtualenv</title>
      <link>https://cestlaz.github.io/posts/flask-install-flask/</link>
      <pubDate>Sat, 15 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/flask-install-flask/</guid>
      <description>Second video in the Flask series. This one goes over installing Flask in a virtualenv and running a simple Flask application.
Nothing much to say about this other then check out the video:</description>
    </item>
    
    <item>
      <title>Setting up Linux for Flask Web Development</title>
      <link>https://cestlaz.github.io/posts/flask-setup-virtualenv/</link>
      <pubDate>Fri, 14 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/flask-setup-virtualenv/</guid>
      <description>Those laptops that my Hunter students were supposed to get have finally arrived. We&#39;re distributing them on Monday. Each student will have a Dell laptop running Ubuntu 16.04 for as long as they&#39;re in the program.
This means we can finally start using the web as a way of displaying and sharing our projects.
For this type of web development, I&#39;m a big fan of using Flask. Flask is a Python microframework.</description>
    </item>
    
    <item>
      <title>Using Emacs - 16 - Undo Tree</title>
      <link>https://cestlaz.github.io/posts/using-emacs-16-undo-tree/</link>
      <pubDate>Sun, 09 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-16-undo-tree/</guid>
      <description>If you use emacs, you should keep an eye on Jon Snader&#39;s blog, irreal.org. A few days he posted on Undo Tree - a package that extends Emacs&#39;s built in undo functionality.
Basic emacs has undo, bound to C-/ or C-_ but that&#39;s about it. Undo tree, which you can set up with:
(use-package undo-tree :ensure t :init (global-undo-tree-mode))  adds two key features. First is redo, which you get by adding the shift key to the undo keychords.</description>
    </item>
    
    <item>
      <title>Chromebooks in K12</title>
      <link>https://cestlaz.github.io/posts/chromebooks/</link>
      <pubDate>Thu, 06 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/chromebooks/</guid>
      <description>The discussion today over on AVC was Chromebooks in K12, a title I conveniently lifted.
In the comments, I was asked my thoughts on chromebooks vs Linux on low end hardware so, here they are.
Chromebooks are cheap, near instant on, and, if you&#39;re using Google Apps for education, little to no administration necessary.
This is a HUGE win for schools.
There are some issues. School WiFi, for example, is frequently insufficient which can be a problem for a device that&#39;s meant to be connected to the cloud.</description>
    </item>
    
    <item>
      <title>Computational Thinkers in Scotland</title>
      <link>https://cestlaz.github.io/posts/scotland/</link>
      <pubDate>Fri, 30 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/scotland/</guid>
      <description>I&#39;m way behind on my Communications of the ACM. I generally only read them when I use my trainer in the mornings and with summer running and outside riding, I&#39;m still on the December 2015 issue.
This morning, I read a viewpoint by Jeremy Scott and Alan Bundy on a program in Scotland. If you&#39;re an ACM member, and if you&#39;re a CS practitioner, student, academic, or teacher you should be, you can read the piece for details.</description>
    </item>
    
    <item>
      <title>User friendly - I do not think that means what you think it means</title>
      <link>https://cestlaz.github.io/posts/user-friendly/</link>
      <pubDate>Wed, 28 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/user-friendly/</guid>
      <description>Saw this post the other day: Emacs is hurting Clojure and this response: Is Emacs Really HJard to Learn / Use.
This called to mind those countless discussions about tools being user friendly. I&#39;m frequently on the unpopular side of these discussions. Linux vs Windows vs Mac, Shell vs GUI, Emacs vs fill-in-the-blank-editor-or-IDE and on and on.
Don&#39;t use Emacs, it isn&#39;t user friendly. Don&#39;t use Linux, it isn&#39;t user friendly.</description>
    </item>
    
    <item>
      <title>Can NYCIST become in leader in CS Education?</title>
      <link>https://cestlaz.github.io/posts/nycist/</link>
      <pubDate>Sat, 24 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/nycist/</guid>
      <description>I only learned about NYCIST last spring. They&#39;re the &#34;New York Consortium for Independent School Technologists.&#34; They had something of an open house that I attended. I heard about them from friend and fellow CS educator Saber Khan.
Last Thursday I spent an afternoon and evening with NYCIST members for a discussion of the state of K12 Computer Science Education in the City.
Most of my work has been with public schools and most of the teachers I know, public school teachers so it was great to make new friends in the Independent school community.</description>
    </item>
    
    <item>
      <title>Impostor Syndrome - I&#39;m not good enough</title>
      <link>https://cestlaz.github.io/posts/imposters/</link>
      <pubDate>Fri, 09 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/imposters/</guid>
      <description>I&#39;ve been meaning to comment on these tweets for a while:
I went to high school with some scary smart people. Never made math team. Didn&amp;#39;t get into honors math. Thought I wasn&amp;#39;t good at it.
&amp;mdash; Stanislav Nikolov (@snikolov) June 30, 2016  @zamansky :D
that&amp;#39;s the thing though you can get such an inferiority complex by always comparing yourself to others https://t.co/LvaMjp1WVf
&amp;mdash; Stanislav Nikolov (@snikolov) July 1, 2016</description>
    </item>
    
    <item>
      <title>First day back, or not</title>
      <link>https://cestlaz.github.io/posts/first-day-back/</link>
      <pubDate>Tue, 06 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/first-day-back/</guid>
      <description>The day after Labor Day. The day NYC teachers traditionally return to work. For the first time in a quarter century, I&#39;m not one of them.
It&#39;s weird.
Instead, I&#39;m in the second week of Hunter College&#39;s fall semester. So far so good on that front. I&#39;m getting to know my students, planning activities and overall having a good time.
But, I do have to reflect on some of the things I&#39;m not going to get to do this week:</description>
    </item>
    
    <item>
      <title>New Term, New Tool - repl.it</title>
      <link>https://cestlaz.github.io/posts/new-term-new-tool-repl.it/</link>
      <pubDate>Fri, 02 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/new-term-new-tool-repl.it/</guid>
      <description>We&#39;re now a week in to my first class at Hunter. It&#39;s a little early for me to really compare and contrast the high school to college experience but I thought I&#39;d share some thoughts on a tool that I&#39;ve recently started to play with.
My students were all supposed to be issued laptops at the beginning of the semester. The plan was to have them learn Linux, the command line, and a little DevOps along the way.</description>
    </item>
    
    <item>
      <title>Using Emacs - 15 - Macros</title>
      <link>https://cestlaz.github.io/posts/using-emacs-15-macros/</link>
      <pubDate>Fri, 02 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-15-macros/</guid>
      <description>I originally planned on do some videos on C++ development but I&#39;m just not feeling it. Probably because I&#39;m excited to be working with my new class and we&#39;re working in Python. We&#39;re not going to be using C+++ for a few months so I&#39;ll get to those videos a little later.
Today, I want to cover what I consider a leatherman or multi-tool for Emacs. Something that isn&#39;t perfect for any particular job but can get almost any job done: Macros.</description>
    </item>
    
    <item>
      <title>Federal Aid for Code Schools - is this a good thing?</title>
      <link>https://cestlaz.github.io/posts/fed-aid-for-code-schools/</link>
      <pubDate>Tue, 30 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/fed-aid-for-code-schools/</guid>
      <description>I saw this headline earlier today: The U.S. Just Made a Bold Move to Improve Diversity in Tech.
The article talks about a program by which a number of code schools will be able to accept federal student aid. I don&#39;t know if we&#39;re talking student loans or grants but I&#39;m not sure it matters.
The headline sounds great. I&#39;m not so sure that this is a good thing.
My thinking&#39;s evolved over the years but right now, everything tells me that public funds and for profit education don&#39;t mix.</description>
    </item>
    
    <item>
      <title>Using Emacs - 14 - Thoughts</title>
      <link>https://cestlaz.github.io/posts/using-emacs-14-thoughts/</link>
      <pubDate>Wed, 17 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-14-thoughts/</guid>
      <description>Sorry for the incosistancy of the posts. I hope to get to that one video a week soon but I&#39;ve still got a hectic couple of weeks ahead.
No new material this week, or at least very little. This week, I talk about some thoughts on the &#34;Using Emacs&#34; series.
In the video I talk about Sacha Chua and her work as a leader in the Emacs community. Check out her stuff here: http://sachachua.</description>
    </item>
    
    <item>
      <title>Using Emacs - 13 - Yasnippet</title>
      <link>https://cestlaz.github.io/posts/using-emacs-13-yasnippet/</link>
      <pubDate>Thu, 04 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-13-yasnippet/</guid>
      <description>It turns out that Elpy, a popular emacs package for python development is much easier to set up than I remember. It turns out all you need is:
(use-package elpy :ensure t :config (elpy-enable))  The video shows how to install and a bit of use. I don&#39;t think it&#39;s a package I&#39;m going to use much since I use other tools to do similar things but it&#39;s worth checking out.</description>
    </item>
    
    <item>
      <title>Using Emacs - 12 - Flycheck, Jedi, Python</title>
      <link>https://cestlaz.github.io/posts/using-emacs-12-python/</link>
      <pubDate>Wed, 27 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-12-python/</guid>
      <description>This week, we&#39;re going to look at my setup for Python programming.
I&#39;m an educator, not a professional developer so I&#39;m not working in huge code bases with dozens or more files at a time. I do periodically work in medium size code bases and will talk about cross file navigation and project management later on. There are also more powerful emacs Python packages. One being elpy. Elpy looks pretty cool but for me, it&#39;s overkill.</description>
    </item>
    
    <item>
      <title>Ed Disruption - why it&#39;s different</title>
      <link>https://cestlaz.github.io/posts/ed-disrupt-why-diff/</link>
      <pubDate>Mon, 25 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/ed-disrupt-why-diff/</guid>
      <description>Earlier today I read this post by Eliot Horowitz, founder and CTO of MongoDB.
Eliot titled the post &#34;Innovate vs Appropriate&#34; and talks about the importance of knowing when to come up with something new vs when to use the accepted tool, technique, or method. Eliot, of course is discussing this as it applies to MongoDB and it&#39;s well worth a read but it got me thinking about the ever popular need to &#34;</description>
    </item>
    
    <item>
      <title>Using Emacs - 11 - Reveal.js presentations</title>
      <link>https://cestlaz.github.io/posts/using-emacs-11-reveal/</link>
      <pubDate>Tue, 19 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-11-reveal/</guid>
      <description>Happy to be back after a couple of weeks.
My wife and son spent some time in San Francisco, Mountain View, and Seattle. The main reason was to see our daughter who&#39;s interning out there for the summer but it was also a great opportunity to catch up with over 100 former students. If you&#39;re interested in seeing more, I wrote a bit about it here.
I was originally going to start talking about Python development but then saw this post on reddit about reveal.</description>
    </item>
    
    <item>
      <title>West coast trip - a nice close to act I</title>
      <link>https://cestlaz.github.io/posts/end-to-act-1/</link>
      <pubDate>Mon, 18 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/end-to-act-1/</guid>
      <description>If I look at my leaving Stuyvesant and the NYC Department of Education to join Hunter College as the end of Act I of my teaching career, then our family&#39;s West Coast swing was a nice way to pull down the curtain.
The impetus for the trip was visiting Batya - she&#39;s interning at Facebook this summer and having an absolute blast.
The plan was to spend a few days in San Francisco, then a little south to Mountain View, where Batya was staying, and then fly up to Seattle for a couple of days.</description>
    </item>
    
    <item>
      <title>Using Emacs - 10 - org init files</title>
      <link>https://cestlaz.github.io/posts/using-emacs-10-org-init/</link>
      <pubDate>Fri, 01 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-10-org-init/</guid>
      <description>I&#39;ll be traveling for the next couple of weeks so I probably won&#39;t have time for another video until mid to late July. I&#39;ll probably write a post about this series and do some regular blogging over that time but probably no new videos for a couple of weeks.
 Also, a couple of notes about the series: Instead of making a separate git branch for each episode, I&#39;m just adding on to the master branch on GitHub.</description>
    </item>
    
    <item>
      <title>Hillary and Student Loans</title>
      <link>https://cestlaz.github.io/posts/hillary-loans/</link>
      <pubDate>Thu, 30 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/hillary-loans/</guid>
      <description>Yesterday I read over Hillary&#39;s briefing on her initiative on Technology and Innovation.
A lot of it sounds good but, at least for the education piece, I have my doubts. My feeling is that she&#39;s pretty much aligned with the current administration education wise and the current administration has been as bad if not worse than the previous with respect to public education.
While I have issues with some of the education pieces and very much like some of the others, I don&#39;t want to get into that today.</description>
    </item>
    
    <item>
      <title>On Teaching,  Mentors, and Role Models</title>
      <link>https://cestlaz.github.io/posts/mentors/</link>
      <pubDate>Wed, 29 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/mentors/</guid>
      <description>Yesterday over at AVC Fred blogged about the AFSE graduation and posted a transcript of the speech he gave. It&#39;s well worth a read.
Some of the comments touched on mentors and role models so I though I&#39;d talk a little about that here.
I&#39;ve always believed that as a parent, modeling - that is, how we behave is one of the largest shapers of our kids. It&#39;s one thing to take your kid to a museum because that&#39;s what you should do as a good parent and another if you think - &#34;</description>
    </item>
    
    <item>
      <title>Using Emacs - 9 - Themes</title>
      <link>https://cestlaz.github.io/posts/using-emacs-9-themes/</link>
      <pubDate>Tue, 28 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-9-themes/</guid>
      <description>Now that we have a nice basic configuration, let&#39;s make Emacs look a little nicer.
Like most editors, Emacs can be extensively themed.
As shown in the video, you can quickly see the built in themes using the customize-themes command.
You can load one of these themes by using the load-theme command interactively or, more likely by putting:
(load-theme &amp;#39;leuven t)  in your init.el. The above code loads the built in leuven theme.</description>
    </item>
    
    <item>
      <title>Using Emacs - 8 - Autocomplete</title>
      <link>https://cestlaz.github.io/posts/using-emacs-8-autocomplete/</link>
      <pubDate>Sun, 26 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-8-autocomplete/</guid>
      <description>Out of the box, Emacs supports various types of completion.
Tab completion for filenames and commands basically work right out of the box and Emacs has built in modes like Abbrev, Hippie Expand, and Dabbrev provide a manner of completion for in buffer text.
I briefly show Dabbrev (Dynamic Abbrevs) in the video and if you&#39;re interested in the others, follow the links.
We saw ow the built in Ido mode and third party packages like Ivy, which I prefer, and Helm make for better completions on functions, filenames, and the like and Emacs also has third party packages for in buffer completion.</description>
    </item>
    
    <item>
      <title>Using Emacs - 7- Navigation with Avy</title>
      <link>https://cestlaz.github.io/posts/using-emacs-7-avy/</link>
      <pubDate>Fri, 24 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-7-avy/</guid>
      <description>Here&#39;s a really cool navigation method that I&#39;ve been meaning to use more. Avy is a replacement for ace-jump mode which is an implementation of easymotion, a vim plugin.
It&#39;s pretty cool and lets you quickly navigate to any spot on the screen.
After triggering avy, or more specifically the **avy-goto-char** function, emacs prompts you for a single character. When you type it, all instances of the character that start out words change to a highlighted letter.</description>
    </item>
    
    <item>
      <title>Lesson plans - scripts to springboards</title>
      <link>https://cestlaz.github.io/posts/lesson-plans/</link>
      <pubDate>Thu, 23 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/lesson-plans/</guid>
      <description>I spent last Saturday up at the Microsoft offices in Times Square observing a TEALS training session. My fried Nathaniel Granor, Teals Regional Manager in the east has invited me a number of times and this time I was able to make it.
If you don&#39;t know, TEALS is a program that takes volunteers in the tech industry and places them in classrooms. Unlike other programs, the TEALS volunteers work with the teachers while the kids learn some CS.</description>
    </item>
    
    <item>
      <title>Better Comments or tooling as a time sink</title>
      <link>https://cestlaz.github.io/posts/better-comments/</link>
      <pubDate>Wed, 22 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/better-comments/</guid>
      <description>The other day my friend and fellow CS Ed Blogger Alfred Thompson wrote about Better Comments, an extension for visual studio that displays comments that are marked up with special characters in order to highlight them. Here&#39;s a screenshot:
https://raw.githubusercontent.com/omsharp/BetterComments/master/screenshots/ClassificationC.png
So, the first thing I though was &#34;I bet emacs could do that pretty easily&#34; and down the rabbit hole I went.
I had to figure out something about how emacs themes and font-locking (emacs for syntax highlighting) works and of course spent far too much time learning about Emacs, my favored tool, rather than getting actual work done, but I came up with this:</description>
    </item>
    
    <item>
      <title>Using Emacs - 6 - Searching a Swiper</title>
      <link>https://cestlaz.github.io/posts/using-emacs-6-swiper/</link>
      <pubDate>Mon, 20 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-6-swiper/</guid>
      <description>This video is all about using incremental search to navigate through your emacs buffers.

You can use the default incremental searchb, bound to C-s for isearch-forward C-r to search backwards (reverse).
They work really well as is but I prefer using Swiper. The video demos both and the Swiper home page has loads of details.
Part of the Swiper package includes ivy and counsel which I use instead of ido.</description>
    </item>
    
    <item>
      <title>Robots platforms and practicalities</title>
      <link>https://cestlaz.github.io/posts/robot-survey/</link>
      <pubDate>Wed, 15 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/robot-survey/</guid>
      <description>I received an email from a friend the other day asking me about a particular robotics platform she recently saw.
I&#39;ve played with robotics on and off over the years ranging from building them from (not using) scratch using Atmel chips and programming them in assembly to using Arduino based platforms to using pre-built robot platforms. They&#39;re really cool and since they interact with the real world you can do all sorts of interesting and motivational things with students.</description>
    </item>
    
    <item>
      <title>Using Emacs - 5 - Windows</title>
      <link>https://cestlaz.github.io/posts/using-emacs-5-windows/</link>
      <pubDate>Tue, 14 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-5-windows/</guid>
      <description>Sorry for the delay in getting this next video / post up. I spent the last part of last week at The Personal Democracy Forum 2016 which is really an exceptional conference.
I posted a bit about it in my last post and plan to write some more on it, but for now, more Emacs.

This video concerns using windows. By using buffers and windows and the basics you got from the tutorial, you shouldn&#39;t have to ever leave emacs.</description>
    </item>
    
    <item>
      <title>PDF 2016 - How we lost the open web</title>
      <link>https://cestlaz.github.io/posts/pdf2016-lost-in-the-silo/</link>
      <pubDate>Sat, 11 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/pdf2016-lost-in-the-silo/</guid>
      <description>I spent the last couple of days attending Personal Democracy Forum 2016, described on their landing site as:
  The world’s leading conference exploring and analyzing technology&#39;s  impact on politics, government, and society.  That&#39;s the reason why I haven&#39;t posted my latest Emacs video.
PDF is a great conference and raised a huge number of important issues. I&#39;ll probably blog about a few over the next few weeks.</description>
    </item>
    
    <item>
      <title>Navajo Math Circles</title>
      <link>https://cestlaz.github.io/posts/navajo-circles/</link>
      <pubDate>Wed, 08 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/navajo-circles/</guid>
      <description>Yesterday, I saw the New York Premiere of Navajo Math Circles, a documentary on a Math Circle put in place to support and enrich the currently under-served community in the Navajo educational system.
At their core, Math Circles are math outreach and enrichment programs. I&#39;m most familiar with the New York Math Circle. I&#39;m friends with many of their teachers and organizers and my son took part in their summer program for a couple of years.</description>
    </item>
    
    <item>
      <title>Using Emacs - 3 - How to think about Emacs</title>
      <link>https://cestlaz.github.io/posts/using-emacs-3-elisp/</link>
      <pubDate>Mon, 23 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-3-elisp/</guid>
      <description>Many people think of Emacs as an editor. I like to think of it as an Elisp interpreter where you live code documents.
In some ways, it&#39;s like those new fangled interactive programming environments where you type in code and the updates are reflected instantly.
In this video, I try to explain the way I think about Emacs and why it&#39;s so cool.
The only change we made to our configuration was adding:</description>
    </item>
    
    <item>
      <title>Using Emacs - 4 - Buffers</title>
      <link>https://cestlaz.github.io/posts/using-emacs-4-buffers/</link>
      <pubDate>Mon, 23 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-4-buffers/</guid>
      <description>Now that we&#39;re past the intro material, we&#39;ll start looking at emacs features one at a time. This will let you focus on using the one feature we&#39;re covering, fit it into your work flow, and really get comfortable with it.
This time we&#39;ll dive into using Emacs effectively with buffers.
Watch the video and then make a real effort to use buffers over the next few emacs sessions. Before you know it, they&#39;ll be a natural part of your work flow.</description>
    </item>
    
    <item>
      <title>Using Emacs - Intro to Org Mode</title>
      <link>https://cestlaz.github.io/posts/using-emacs-2-org/</link>
      <pubDate>Mon, 23 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-2-org/</guid>
      <description>This video is a brief introduction to org-mode, a mode I use for all sorts of things.
We&#39;ll dive into org-mode later in the series. Right now I just want you to see the basics since we&#39;ll be using org-mode for any notes that are written up during this series.
Actually, all my blog posts are written in org-mode.
Here are the important lines to add to your Emacs init.</description>
    </item>
    
    <item>
      <title>Using Emacs - Introduction</title>
      <link>https://cestlaz.github.io/posts/using-emacs-introduction/</link>
      <pubDate>Mon, 23 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-introduction/</guid>
      <description>I&#39;m sure I&#39;ve mentioned that I&#39;ve been an Emacs wonk for decades. Since the mid-80&#39;s in fact. I&#39;ve spent time using other editors, word processors, and development tools but always find my way back.
I recommend that budding computer science students develop a good tool set and encourage them to explore Emacs but while it&#39;s pretty easy to load Emacs and find your way around, particularly if you use the mouse and menus there isn&#39;t a clear path to take you from beginner to using it as an efficient tool let alone customizing it.</description>
    </item>
    
    <item>
      <title>Using Emacs - Setting up the Package Manager</title>
      <link>https://cestlaz.github.io/posts/using-emacs-1-setup/</link>
      <pubDate>Mon, 23 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-1-setup/</guid>
      <description>This video will step you through setting up Emacs to use MELPA for packages.

We configured emacs by creating a folder named .emacs.d and creating a file within it named init.el.
Here&#39;s the contents of that file:
(setq inhibit-startup-message t) (require &amp;#39;package)(setq package-enable-at-startup nil)(add-to-list &amp;#39;package-archives &amp;#39;(&amp;#34;melpa&amp;#34; . &amp;#34;https://melpa.org/packages/&amp;#34;))(package-initialize);; Bootstrap `use-package&amp;#39; (unless (package-installed-p &amp;#39;use-package)(package-refresh-contents)(package-install &amp;#39;use-package)) (use-package try :ensure t) (use-package which-key :ensure t :config (which-key-mode))   The last two inituse-package clauses install two helpful packages: *try*: let&#39;s you try packages without installing them.</description>
    </item>
    
    <item>
      <title>Collaborative Coding or Cheating</title>
      <link>https://cestlaz.github.io/posts/collaborative-coding-or-cheating/</link>
      <pubDate>Fri, 20 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/collaborative-coding-or-cheating/</guid>
      <description>I haven&#39;t been teaching this past semester. That&#39;s why I haven&#39;t been writing much about lessons. I miss working with students but that will resume in the fall and this semester has allowed me to get a jump on new projects.
It&#39;s also allowed me to look at some student issues from a bit of a distance.
One issue that keeps coming up is cheating.
Some of it, classroom cheating. my friend Ria recently asked a question on Facebook about it.</description>
    </item>
    
    <item>
      <title>Shell short - tagging old posts in Nikola</title>
      <link>https://cestlaz.github.io/posts/shell-short-tagging/</link>
      <pubDate>Sun, 15 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/shell-short-tagging/</guid>
      <description>Quick post to add to the recent command line fu I&#39;ve been writing about.
Douglas Peterson had another Whatever happened to post. This time on Logo. I wanted to reply, talk about NetLogo and link to some of my old NetLogo posts to help show how cool it is.
Nikola supports tags, makes a nice tags page and for each tag, a nice page of all the links.
Nikola has a plugin tags which lets you manage tags from the command line.</description>
    </item>
    
    <item>
      <title>BASH scripting?</title>
      <link>https://cestlaz.github.io/posts/bash-scripting/</link>
      <pubDate>Thu, 12 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/bash-scripting/</guid>
      <description>Over in the Facebook AP Computer Science Teachers group someone asked for thoughts on covering BASH scripting as a post AP topic.
A number of us made suggestions. I linked to this old blog post.
One group member said she asked around for similar suggestions and the response she got was &#34;vi and awk.&#34; I wanted to jokingly respond &#34;and after they suggested that they got into their time machine and went back to the 70&#39;s.</description>
    </item>
    
    <item>
      <title>REPOST - Shell games - who confirmed attendance</title>
      <link>https://cestlaz.github.io/posts/duplicate-emails/</link>
      <pubDate>Thu, 12 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/duplicate-emails/</guid>
      <description>Repost This is a repost from March 2015. It didn&#39;t transfer when I rebooted the blog.
Original Quick post on why I love the Unix command line.
We&#39;re busy organizing CSTUY&#39;s first hackathon. It&#39;s going to be at SumAll, where we hold our weekly hacking sessions but while taking registration, we had a little program.
The kids signed up on a Google doc but we all know the story -- when people sign up for a free event, even one with free food and t-shirts, many don&#39;t show.</description>
    </item>
    
    <item>
      <title>Should We Teach HTML?</title>
      <link>https://cestlaz.github.io/posts/teaching-html/</link>
      <pubDate>Mon, 09 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/teaching-html/</guid>
      <description>Yesterday, Doug Peterson wrote a &#34;Whatever happened to&#34; post subtitled HTML as an essential 21st Century skill? It&#39;s a nice post.
I left a comment but thought I&#39;d elaborate here.
No, knowing HTML is not programming - it&#39;s markup. Even so, when I help people design CS programs, I&#39;ll frequently recommend starting with HTML or at least introducing it early.
Why?
It&#39;s a gateway and not just to programming.
HTML is pretty easy, you want something bold, you just wrap the word in &amp;lt;b&amp;gt; and ==:</description>
    </item>
    
    <item>
      <title>A World Without Advanced Placement</title>
      <link>https://cestlaz.github.io/posts/world-without-ap/</link>
      <pubDate>Sat, 07 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/world-without-ap/</guid>
      <description>Some good points in the Facebook comments on my last post. One notable comment was the fact that many teachers wouldn&#39;t be able to gain the traction needed to teach CS without an AP designation. This is true but also sad that we&#39;ve awarded such educational authority to a private company that&#39;s accountable to no one. Schools should run courses because they&#39;re good for kids not specifically because they&#39;re AP.</description>
    </item>
    
    <item>
      <title>Advanced Placement - Because We Don&#39;t Trust Teachers</title>
      <link>https://cestlaz.github.io/posts/ap-we-dont-trust-teachers/</link>
      <pubDate>Sat, 07 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/ap-we-dont-trust-teachers/</guid>
      <description>Yesterday, I ranted on about the College Board. This led to a Facebook hosted discussion which got me thinking a little more:
Advanced Placement exams basically exist because we don&#39;t trust our high school teachers.
I usually use phrases like &#34;society doesn&#39;t trust&#34; but let&#39;s personalize it this time -- for parents, think about whether or not you trust your kids teachers? Do you a large private, unaccountable organization more?</description>
    </item>
    
    <item>
      <title>As curricula changes, what&#39;s falling through the cracks?</title>
      <link>https://cestlaz.github.io/posts/semaphores/</link>
      <pubDate>Sun, 01 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/semaphores/</guid>
      <description>Edit: Just a brief note to clarify a couple of things. As indicated in the comments, this post isn&#39;t about what&#39;s appropriate for HS CS. It&#39;s more about what kids have after they finish their education - be it high school, college, code school, or other.
Some of my thoughts are the results of pondering on the exacerbations of friends after interviewing people for entry level positions.
The two examples are just to illustrate the point.</description>
    </item>
    
    <item>
      <title>NYC DOE - Doing what it can to keep opportunities away from kids</title>
      <link>https://cestlaz.github.io/posts/cstuy-coi/</link>
      <pubDate>Thu, 28 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/cstuy-coi/</guid>
      <description>The difficulties I&#39;ve had with the city and DOE are pretty well documented by now.
Today I&#39;m going to tell you about my latest dealings with DOE and how they prevented my team from bringing free quality CS education to city students.
CSTUY&#39;s not running SHIP, its summer program this year.
That&#39;s not something I&#39;m happy about but part of me knew it might happen. What did surprise me, although it shouldn&#39;t have, was the role that the NYC DOE played in preventing it from happening.</description>
    </item>
    
    <item>
      <title>Awards for Educators</title>
      <link>https://cestlaz.github.io/posts/awards/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/awards/</guid>
      <description>There are all sorts of awards for teachers. The Presidential awards, NEA awards, National and State level awards, and more. There are also awards and honors given in more narrow areas like NCTM for math and our own ACM.
I&#39;ve haven&#39;t won any and never expected to. I&#39;ve never played well with the establishment.
It&#39;s ok though. For every honoree that I can point to and say &#34;there&#39;s a master teacher,&#34;</description>
    </item>
    
    <item>
      <title>Become a CS Education Thought Leader - No Experience Needed</title>
      <link>https://cestlaz.github.io/posts/2016-04-20-thought-leaders/</link>
      <pubDate>Wed, 20 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2016-04-20-thought-leaders/</guid>
      <description>A few weeks ago, a friend asked if I knew any CS teachers that were available to work this summer. At the time, I didn&#39;t have anyone to recommend. We were still up in the air on running CSTUY&#39;s SHIP summer immersion program.
We ultimately decided not to run SHIP this summer. Mostly due to the fact that in my new position, I didn&#39;t have the time to do the necessary fund-raising and outreach.</description>
    </item>
    
    <item>
      <title>Something growing in the Hudson Valley</title>
      <link>https://cestlaz.github.io/posts/2015-10-29-catskills-2015/</link>
      <pubDate>Thu, 29 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2015-10-29-catskills-2015/</guid>
      <description>Morgan Roderick pictures
https://www.flickr.com/photos/morganroderick/sets/72157660040372060/with/22362235148/
&amp;ndash;!&amp;gt;
   The Hudson Valley&#39;s a beautiful place, particularly during the Fall. We don&#39;t get up there as much as we should - usually just for apple picking and then for the New York Sheep and Wool Festival.  It&#39;s a region with great food, hiking, natural beauty, history and more.  So, what exactly is growing?  The Hudson Valley Tech community.  I first heard about what Hudson Valley was doing around Tech back at the August New York Tech Meetup.</description>
    </item>
    
    <item>
      <title>I guess I&#39;m a dumbass</title>
      <link>https://cestlaz.github.io/posts/2014-02-27-dumbass/</link>
      <pubDate>Thu, 27 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-02-27-dumbass/</guid>
      <description>I like a fairly informal atmosphere in my classes. Students have to know that there&amp;rsquo;s a line between teacher and student but I also want them to feel like we&amp;rsquo;re all part of the Stuy CS family.
Whenever we start a new term, it takes a while to break down the walls. The students don&amp;rsquo;t know what to expect of me, can they trust me? Am I a bozo? Who knows.</description>
    </item>
    
    <item>
      <title>Change the data</title>
      <link>https://cestlaz.github.io/posts/2014-02-26-change-the-data/</link>
      <pubDate>Wed, 26 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-02-26-change-the-data/</guid>
      <description>Patient: &amp;ldquo;Doctor, it hurts when I do this.&amp;rdquo;
Doctor: &amp;ldquo;So, don&amp;rsquo;t do that.&amp;rdquo;
 We&amp;rsquo;ve been spending time on State Space Search. It&amp;rsquo;s a great topic. We deal with or at least introduce:
 Recursion Blind search Heuristic search foreshadowing things like A* and Dijkstra&amp;rsquo;s algorithm.  and more. Today, however. I want to talk about something else.
We started by developing a maze solver. It reads a text file representing the maze and then proceeds to find an exit.</description>
    </item>
    
    <item>
      <title>Fibonacci by the tail</title>
      <link>https://cestlaz.github.io/posts/2014-02-13-fibonacci/</link>
      <pubDate>Thu, 13 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-02-13-fibonacci/</guid>
      <description>We&amp;rsquo;re ramping up for recursion in my junior classes - state space search, nlg(n) sorts, etc. As a refresher, we took a quick look at the Fibonacci numbers.
Now, some people seem to think that it&amp;rsquo;s a tired problem. It&amp;rsquo;s mathy, it&amp;rsquo;s played out, it&amp;rsquo;s boring etc.. They just might be missing the point.
The beauty isn&amp;rsquo;t in the problem itself, but rather, that it&amp;rsquo;s a platform on which you can look at many problem solving techniques.</description>
    </item>
    
    <item>
      <title>StuyCS  family from coast to coast</title>
      <link>https://cestlaz.github.io/posts/2014-02-11-tapia-2/</link>
      <pubDate>Tue, 11 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-02-11-tapia-2/</guid>
      <description>I think my one regret over the years is that I haven&amp;rsquo;t done much travel. So, when I had the opportunity to go to the 2014 Tapia conference, I jumped at the chance. I didn&amp;rsquo;t get to see too much of Seattle, but that&amp;rsquo;s OK. Now I&amp;rsquo;ve more incentive to go back.
In addition to seeing new sites, it also gave me an opportunity to see friends that I don&amp;rsquo;t get to see too often.</description>
    </item>
    
    <item>
      <title>Tapia 2014</title>
      <link>https://cestlaz.github.io/posts/2014-02-09-tapia/</link>
      <pubDate>Sun, 09 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-02-09-tapia/</guid>
      <description>Spent the past few days at the Tapia Conference in Seattle.
The Tapia conference is billed as a &amp;ldquo;Celebration of Diversity in Computing.&amp;rdquo; The bulk of the attendees seemed to be students. Undergrads and grads. The undergrads were mostly juniors and seniors, but a bunch of freshmen and sophomores were there as well. Of course there were faculty members to join them as well as people from industry.
What was I doing there?</description>
    </item>
    
    <item>
      <title>Shell Games - an introduction</title>
      <link>https://cestlaz.github.io/posts/2014-02-04-shellgames-1-intro/</link>
      <pubDate>Tue, 04 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-02-04-shellgames-1-intro/</guid>
      <description>A few weeks ago, I noticed this Twitter conversation between Alfred Thompson and Steve Keinath

I&amp;#39;d love to see an Intro to Linux (way more than just install) as a 3-hour workshop at #CSTA14 @csteachersa
&amp;mdash; Steve Keinath (@keinath) November 12, 2013 @alfredtwo @csteachersa Right. I know very little &amp;amp; would love a &amp;quot;zero to hero&amp;quot; Linux workshop.
&amp;mdash; Steve Keinath (@keinath) November 12, 2013  
I briefly considered proposing a session for the conference but it was just a day or two before the deadline, I don&#39;t know if I&#39;m going to be able to attend the conference, and besides, who said anything I proposed would be accepted.</description>
    </item>
    
    <item>
      <title>Summing up at SumAll</title>
      <link>https://cestlaz.github.io/posts/2014-02-01-sumall/</link>
      <pubDate>Sat, 01 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-02-01-sumall/</guid>
      <description>Our hackers have been coming down to SumAll every Saturday for a while now. It&amp;rsquo;s a great space and we&amp;rsquo;ve been given run of the office. That said, the hackers really had no idea what SumAll is all about.
Today, we had our first guest speaker. Davin Chew, founder and CTO of SumAll. Davin&amp;rsquo;s also a member of the StuyCS family, he was my student back in the nineties. When Davin heard we needed space for our Saturday program, he and the SumAll team graciously offered to host.</description>
    </item>
    
    <item>
      <title>What I learned from Pete Seeger</title>
      <link>https://cestlaz.github.io/posts/2014-01-30-pete-seeger/</link>
      <pubDate>Thu, 30 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-01-30-pete-seeger/</guid>
      <description>This past Monday I, like may woke to hear about the passing of Pete Seeger. Ten days earlier we were up at Symphony Space for the &amp;ldquo;Woody&amp;rsquo;s Children&amp;rdquo; 45th Anniversary Concert. Pete was supposed to perform but was ill. At 94 years of age, I wondered if the end was near. I was at the concert with my family as well as with my buddy Ben. Fitting since Ben and I grew up on Pete&amp;rsquo;s music while many of our peers did not.</description>
    </item>
    
    <item>
      <title>Show me the data</title>
      <link>https://cestlaz.github.io/posts/2014-01-26-show-me-the-data/</link>
      <pubDate>Sun, 26 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-01-26-show-me-the-data/</guid>
      <description>Last time, I shared my thoughts on the recent coverage of AP CS statistics. Compiled and presented by Barbara Ericson and later reported on all over the place.
To summarize my point of view - yes there is a problem but some of the highlighted data points can easily be shown to be irrelevant and therefore can hurt the greater goal of access to great CS education for all.
This felt like the launching pad for a great class discussion.</description>
    </item>
    
    <item>
      <title>At Last - CS Gender Equity in Multiple States!!!!!</title>
      <link>https://cestlaz.github.io/posts/2014-01-11-badstats/</link>
      <pubDate>Sat, 11 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-01-11-badstats/</guid>
      <description>Some buzz seems to have circulated on the data compiled by Barbara Ericson on AP Computer Science test takers in 2013. In addition to going to the source there was a piece in The Atlantic and in Education Week.
Some exciting results:
 In two states just as many girls passed the AP CS exam as guys!!!!! In two other states, just 6 more guys passed than girls!!!!! In yet another state, 100% of the girls passed, doing far better than the approximately 75% of the boys that passed!</description>
    </item>
    
    <item>
      <title>Rot13 - Gateway &lt;s&gt;Drugs&lt;/s&gt; Techniques</title>
      <link>https://cestlaz.github.io/posts/2014-01-07-rot13-gateway/</link>
      <pubDate>Tue, 07 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-01-07-rot13-gateway/</guid>
      <description>I&amp;rsquo;ve written before about That One Inspirational Curriculum - the idea that it&amp;rsquo;s not the topic in the syllabus but rather what the teacher does with it.
Some times a simple problem can lead to some really neat concepts.
Take what we did in my AP classes over the past couple of days.
I wanted a nice little warm up after the break so we wrote a simple rotation cipher. We started with a little encode routine - take a string and rotate the letters by some offset.</description>
    </item>
    
    <item>
      <title>Hacking Sessions Resume</title>
      <link>https://cestlaz.github.io/posts/2014-01-05-hacking-sessions-7/</link>
      <pubDate>Sun, 05 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-01-05-hacking-sessions-7/</guid>
      <description>Back to school last Thursday after almost two week off. Twenty four hours later - Snow Day. I know this sounds a bit hokey, but I really would have rather had school. I love a good snow day as much as the next guy, but after a big vacation, I was really ready to get back to work with the kids.
Saturday, hacking sessions were set to resume. Being in Manhattan, getting around was pretty easy but we&amp;rsquo;ve got hackers from all over the city from Staten Island to the Bronx.</description>
    </item>
    
    <item>
      <title>Plans for the New Year</title>
      <link>https://cestlaz.github.io/posts/2014-01-01-new-year/</link>
      <pubDate>Wed, 01 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-01-01-new-year/</guid>
      <description>I&amp;rsquo;ve never been one for New Year&amp;rsquo;s resolutions.
If I&amp;rsquo;m working on something specific, I might set a goal to finish it, but the idea of goals for a year never struck a chord with me.
It&amp;rsquo;s one of the things that I find absurd about the current teacher rating system - I have to decided on my three goals for the year. I always have one goal with respect to my profession - to be better at it.</description>
    </item>
    
    <item>
      <title>A New Year and a New look</title>
      <link>https://cestlaz.github.io/posts/2013-12-30-new-year-new-look/</link>
      <pubDate>Mon, 30 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-12-30-new-year-new-look/</guid>
      <description>We&amp;rsquo;re practically at the close of 2013 and it&amp;rsquo;s high time I wished everyone wonderful things for the year to come.
It&amp;rsquo;s also time for a new look to this blog.
Why the rewrite? Partly because I was tired of the look, but mostly because, when I put it together, it was the first time I used that toolset and was just figuring things out.
I&amp;rsquo;m still no expert, but I thought it was time to clean things up.</description>
    </item>
    
    <item>
      <title>Bucket Sorting</title>
      <link>https://cestlaz.github.io/posts/2013-11-27-bucket-sorts/</link>
      <pubDate>Wed, 27 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-11-27-bucket-sorts/</guid>
      <description>In spite of the Java based annoyances I mentioned last time, I decided to go ahead and do Radix sort with my AP students. I usually don&amp;rsquo;t cover it in AP Computer Science, but I like getting the kids to think about using arrays as buckets as it&amp;rsquo;s a new way of thinking for them and it does give a non-trivial application that combines ararys and ArrayLists.
It&amp;rsquo;s a nice little algorithm.</description>
    </item>
    
    <item>
      <title>Teaching Languages</title>
      <link>https://cestlaz.github.io/posts/2013-11-23-teaching-languages/</link>
      <pubDate>Sat, 23 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-11-23-teaching-languages/</guid>
      <description>Java&amp;rsquo;s never been my favorite language either for using or for teaching.
As a programmer, after starting with languages like Fortran and Pascal, I really cut my teeth with C. More recently, Python has been my go to language to get real work done.
From a teaching point of view most languages have good points and bad ones. When the AP class went from Pascal to C++ I lamented losing the simplicity and the low cost of entry.</description>
    </item>
    
    <item>
      <title>Build it first</title>
      <link>https://cestlaz.github.io/posts/2013-11-19-build_it/</link>
      <pubDate>Tue, 19 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-11-19-build_it/</guid>
      <description>The subtitle of this post is:
 and why my students are going to hate me tomorrow.
 When my good friend Gerry Seidman talks to my classes, he frequently says &amp;ldquo;never use a data structure or algorithm you couldn&amp;rsquo;t build yourself.&amp;rdquo;
This doesn&amp;rsquo;t mean that you have to write everything from scratch, just that you should have some knowledge as to what&amp;rsquo;s going on under the hood. I find that all too often young programmers just rely on APIs and libraries and really don&amp;rsquo;t know how their computers and programs are working.</description>
    </item>
    
    <item>
      <title>Hacking Sessions - putting it all together</title>
      <link>https://cestlaz.github.io/posts/2013-11-16-hacking-sessions-5/</link>
      <pubDate>Sat, 16 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-11-16-hacking-sessions-5/</guid>
      <description>Week 5.
Last week, I lamented over the difficulties with only meeting once a week. We went over a log of new material last week and I was happy when today rolled around and the hackers would be able to start putting things together.
When writing a web app, you&amp;rsquo;ve got to know about all sorts of things - for us it&amp;rsquo;s HTML, CSS, Python, and the microframework, flask.</description>
    </item>
    
    <item>
      <title>Hacking Sessions Week 4 - The challenges of once a week</title>
      <link>https://cestlaz.github.io/posts/2013-11-11-hacking-sessions-4/</link>
      <pubDate>Mon, 11 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-11-11-hacking-sessions-4/</guid>
      <description>We just finished week 4 of CSTUY&amp;rsquo;s Hacking Sessions.
I&amp;rsquo;m really happy with how our hackers are doing - they&amp;rsquo;re a great bunch and even if they don&amp;rsquo;t realize it yet, are making great progress.
Meanwhile, as an instructor and program designer I&amp;rsquo;m noticing the differences between a once a week program and having a class every day (note - I&amp;rsquo;m not the sole designer or instructor. I have a great team - JonAlf, Sam, and Topher are three of the best teachers I&amp;rsquo;ve had the privilege of working with - this post, however, is based on my observations).</description>
    </item>
    
    <item>
      <title>Hacking Sessions - Week 2</title>
      <link>https://cestlaz.github.io/posts/2013-10-28-hacking-sessions-2/</link>
      <pubDate>Mon, 28 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-10-28-hacking-sessions-2/</guid>
      <description>Saturday was the second day of CSTUY&amp;rsquo;s Hacking Sessions. We started out wit a minor panic - none of the laptops could connect to the wireless!!! After a brief scramble, we finally gave up and gave our host a call (sorry Davin) and the problem was swiftly addressed. From there it was off to the races.
Last week we spent most of the session with mixers and setting up the laptops.</description>
    </item>
    
    <item>
      <title>Stuyablo II</title>
      <link>https://cestlaz.github.io/posts/2013-10-27-stuyabloii/</link>
      <pubDate>Sun, 27 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-10-27-stuyabloii/</guid>
      <description>Last week in my AP classes, we were working on inheritance.
So, what to do?
Last time around I had my classes work on a &amp;ldquo;speed dating&amp;rdquo; program - StuyDater. Back then JonAlf had his classes work on Stuyablo, that classic dungeon crawl.
I still plan on reworking the StuyDater project, but first I decided to do my take on Stuyablo. Of course, we&amp;rsquo;ve improved on it. This time it&amp;rsquo;s Stuyablo II.</description>
    </item>
    
    <item>
      <title>Why I&#39;m no longer an effective teacher - part 2</title>
      <link>https://cestlaz.github.io/posts/2013-10-25-effective-teacher-2/</link>
      <pubDate>Fri, 25 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-10-25-effective-teacher-2/</guid>
      <description>Earlier I wrote about the new teacher evaluation system and why a teacher such as myself might now be considered ineffective and two ineffectives in a row can cost you your job.
Well, the New York City and New York State Departments of Education are the departments that just keep on giving. Here&amp;rsquo;s the latest.
This coming Wednesday, I won&amp;rsquo;t be teaching during my usual 8:00 to 10:15 block of three AP classes.</description>
    </item>
    
    <item>
      <title>The College Board Smorgasbord -Don&#39;t Overfill Your Plate</title>
      <link>https://cestlaz.github.io/posts/2013-10-23-spectator-ap/</link>
      <pubDate>Wed, 23 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-10-23-spectator-ap/</guid>
      <description>Each month, The Stuyvesant school paper - the Spectator invites a teacher to write a piece on, well, basically, whatever they want to. I did it this past month.
Here&amp;rsquo;s a reposting of the piece. The original can be found on the Spectator site.
Enjoy
&amp;ldquo;I&amp;rsquo;ve got 10 periods of class and no lunch.&amp;rdquo; &amp;ldquo;I&amp;rsquo;ve got four APs.&amp;rdquo; &amp;ldquo;Can I also take Great Books, Multivariate, Physics C, and Software Development?&amp;rdquo; The goal of a Stuyvesant student: take as many electives and AP classes as possible.</description>
    </item>
    
    <item>
      <title>Hacking Sessions Begin</title>
      <link>https://cestlaz.github.io/posts/2013-10-20-hacking-sessions-begin/</link>
      <pubDate>Sun, 20 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-10-20-hacking-sessions-begin/</guid>
      <description>Yesterday was my 46th birthday. How did I spend it? Well, 20 &amp;ldquo;Hackers&amp;rdquo; from 9 schools, 4 student TAs and a few of us teachers gathered at SumAll to kick off CSTUY&amp;rsquo;s first weekly program - Hacking Sessions (sometimes called Hackers Sessions).
  It was the first week so it was mostly mixers, setting up machines (installing Linux on 24 laptops takes time) and going over how we&amp;rsquo;ll be communicating but I&amp;rsquo;m really excited about the weeks to come.</description>
    </item>
    
    <item>
      <title>Databases - the next day</title>
      <link>https://cestlaz.github.io/posts/2013-10-09-database-followup/</link>
      <pubDate>Wed, 09 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-10-09-database-followup/</guid>
      <description>Two days ago I asked the students, in small groups, to come up with a design to store a school (or school district) database.
Yesterday we discussed the designs.
All the students took our brand of AP Computer Science last year - a superset of the old AB curriculum and in that class they implemented a number of data structures such as binary search trees and hash tables, but they really didn&amp;rsquo;t have an opportunity to design something more comprehensive.</description>
    </item>
    
    <item>
      <title>Databases - putting it all together</title>
      <link>https://cestlaz.github.io/posts/2013-10-07-databases/</link>
      <pubDate>Mon, 07 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-10-07-databases/</guid>
      <description>So, we&amp;rsquo;re into the second year of my Software Development class. It&amp;rsquo;s a little different since last time, I taught many of the kids in AP. This time, they&amp;rsquo;re mostly new to me.
In AP, everything is low level. The students build linked lists, binary search trees, heaps, hash tables, graphs and the like. It&amp;rsquo;s all about building the data structure. The Node, if you would.
We&amp;rsquo;re about to start talking about databases.</description>
    </item>
    
    <item>
      <title>Why I might no longer be an effective teacher</title>
      <link>https://cestlaz.github.io/posts/2013-09-06-why_i_might_no_longer_be_an_effective_teacher/</link>
      <pubDate>Fri, 06 Sep 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-09-06-why_i_might_no_longer_be_an_effective_teacher/</guid>
      <description>So here we are starting the new year and NY City is rolling out its new teacher evaluation system.
It was all over the news last year.
Ultimately, the state imposed the plan.
The city hailed the new plan as a way to fire under-performing teachers.
The UFT president hailed the plan as something that &amp;ldquo;is designed to help teachers improve their skills&amp;hellip;.&amp;rdquo;
My take? All three parties have thrown the students and teachers under the bus.</description>
    </item>
    
    <item>
      <title>Bikeshares - Bixi vs Citibike</title>
      <link>https://cestlaz.github.io/posts/2013-08-15-bikeshares-citibike-vs-bixi/</link>
      <pubDate>Thu, 15 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-08-15-bikeshares-citibike-vs-bixi/</guid>
      <description>We just got back from a few days in Montreal.
Love the city - it&amp;rsquo;s walkable, lots of good food, love the waterfront, history, and lots to do.
I also love seeing a city using a bike/walking combo. In a car, you speed by things too fast and parking&amp;rsquo;s always a problem. Foot alone doesn&amp;rsquo;t let you cover enough ground. By bike, you&amp;rsquo;re slow enough to see things but fast enough to get from place to place.</description>
    </item>
    
    <item>
      <title>That One Inspirational Curriculum</title>
      <link>https://cestlaz.github.io/posts/2013-08-07-that_one_inspirational_curriculum/</link>
      <pubDate>Wed, 07 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-08-07-that_one_inspirational_curriculum/</guid>
      <description>Over the last few years, I&amp;rsquo;ve heard a lot of people talk about curriculum.
&amp;ldquo;We need a curriculum that works for everyone.&amp;rdquo;
&amp;ldquo;If we had a good curriculum, we could get CS in the schools.&amp;rdquo;
&amp;ldquo;Can&amp;rsquo;t you just take someone else&amp;rsquo;s curriculum and scale things out?&amp;rdquo;
People miss the point. In my twenty some odd years as an educator and my forty five as a human (including 18 as a parent), I&amp;rsquo;ve never heard someone talk about that one inspirational curriculum that made all the difference in their lives.</description>
    </item>
    
    <item>
      <title>Summer Project 1 - Citibike Data</title>
      <link>https://cestlaz.github.io/posts/2013-07-14-summer_projects/</link>
      <pubDate>Sun, 14 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-07-14-summer_projects/</guid>
      <description>So, the Citibike program has been running for a bit. I like the idea, but I have some reservations &amp;ndash; it&amp;rsquo;s great for getting around in the zone - I&amp;rsquo;ve been using it for short shopping trips - run cross town to Fairway or take a quick trip from work to Porto Rico Importers or Rocco&amp;rsquo;s Pastries. On the other hand, the zone doesn&amp;rsquo;t get to the residential neighborhoods of upper Manhattan or the boroughs and the price per day is way too expensive for regular working class joes, particularly on top of a subway trip.</description>
    </item>
    
    <item>
      <title>NYTM &#43; StuyCS</title>
      <link>https://cestlaz.github.io/posts/2013-07-11-nytm/</link>
      <pubDate>Thu, 11 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-07-11-nytm/</guid>
      <description>For those of that don&amp;rsquo;t know, the New York Tech Meetup it&amp;rsquo;s one of the things that help make the New York Tech Scene so awesome.
It&amp;rsquo;s a group of some 30k+ members and once a month, at Skriball Center at NYU they hold a meetup. It&amp;rsquo;s really quite an event. Members of the tech community demo their projects, there&amp;rsquo;s question and answer time, and afterwards theres a gathering for schmoozing amongst the crowd and the presenters.</description>
    </item>
    
    <item>
      <title>Gender stats</title>
      <link>https://cestlaz.github.io/posts/2013-07-05-gender-stats/</link>
      <pubDate>Fri, 05 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-07-05-gender-stats/</guid>
      <description>People keep asking me about how we&amp;rsquo;re doing with respect to gender balance and CS education at Stuy.
Rather than writing the same email again and again, I figured I&amp;rsquo;d summarize things here.
We&amp;rsquo;ve done rather well at Stuy. I might write more in depth at some point in the future but we don&amp;rsquo;t dumb anything down and we aren&amp;rsquo;t patronizing. I think much of the success can be attributed to:</description>
    </item>
    
    <item>
      <title>Demo Night</title>
      <link>https://cestlaz.github.io/posts/2013-06-27-demo_night/</link>
      <pubDate>Thu, 27 Jun 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-06-27-demo_night/</guid>
      <description>This past year, I was able to convince my administration to allow me to create a new course - Software Development. I really felt there was something missing in our kids CS preparation - missing both from Stuy&amp;rsquo;s program and from many youngsters college experiences.
I plan to do a few posts on the course, it&amp;rsquo;s design, implementation, and lessons learned, but for today, let&amp;rsquo;s look at the years culminating event:</description>
    </item>
    
    <item>
      <title>Real Data - Part II</title>
      <link>https://cestlaz.github.io/posts/2013-05-20-real_data_part_ii/</link>
      <pubDate>Mon, 20 May 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-05-20-real_data_part_ii/</guid>
      <description>About a month ago, I talked about using real data with our intro classes. After looking at the correlation between school&amp;rsquo;s SAT scores and free and reduced lunch rates, it was time to turn the students loose.
The assignment: Find some interesting data out and do something with it. Make a web page that shows what you did and what you discoverde. We had already looked at the NYC Data Mine as well as a few other sources but students were encouraged to find new data sourcess.</description>
    </item>
    
    <item>
      <title>Evaluating Teachers - Evaluating schools</title>
      <link>https://cestlaz.github.io/posts/2013-05-09-evaluating_teachers/</link>
      <pubDate>Thu, 09 May 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-05-09-evaluating_teachers/</guid>
      <description>The Problem: The buzz word is &amp;ldquo;accountability.&amp;rdquo; Why are teachers special? Why don&amp;rsquo;t they feel they need to be evaluated like other professionals? Why do they feel they need a &amp;ldquo;job for life?&amp;rdquo;
Of course, the job for life line is nonsense &amp;ndash; teachers have tenure, but that&amp;rsquo;s just due process - not a guarantee of a job.
Friends in the private sector ask &amp;ldquo;if a teacher is doing a good job, why do they need tenure?</description>
    </item>
    
    <item>
      <title>Madlib Madness</title>
      <link>https://cestlaz.github.io/posts/2013-04-30-madlib_madness/</link>
      <pubDate>Tue, 30 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-04-30-madlib_madness/</guid>
      <description>Earlier in the term, our intro classes spent a little time learning some basic HTML. We don&amp;rsquo;t spend a lot of time on it, just enough so that the students can present their work in a static web site. The end goal, though, was to programatically generate the web sites - there&amp;rsquo;s nothing quite as empowering to a student as when they can present their work to the world.
Finally, it&amp;rsquo;s all coming together.</description>
    </item>
    
    <item>
      <title>Real Data</title>
      <link>https://cestlaz.github.io/posts/2013-04-14-real_data/</link>
      <pubDate>Sun, 14 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-04-14-real_data/</guid>
      <description>When looking for assignments for our classes, in addition to trying to craft assignments that develop and reinforce key ideas, we also strive to come up with ideas that &amp;ldquo;speak&amp;rdquo; to the students and keep their interest. We write small games, use problems within the student&amp;rsquo;s experiences, and in general try to find problems that are appealing.
This is much easier to do when the kids can read data from a file.</description>
    </item>
    
    <item>
      <title>Who won the election -- Quadratic to Linear Time!!!!!</title>
      <link>https://cestlaz.github.io/posts/2013-03-23-who_won_the_election-quadratic_to_linear_time/</link>
      <pubDate>Sat, 23 Mar 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-03-23-who_won_the_election-quadratic_to_linear_time/</guid>
      <description>Last week was crazy. Busy, stressful, late night after late night. It ended, though, on a great note.
A young lady in my intro class found me in my office near the end of the day:
 Student: Mr. Z, I wanted to make sure to catch you before vacation!
Me: What&amp;rsquo;s up?
Student: I wanted to tell you that today&amp;rsquo;s lesson was AWESOME!!!!!!
 Wow. I&amp;rsquo;ve been teaching 23 years and that&amp;rsquo;s never happened before!</description>
    </item>
    
    <item>
      <title>Schools, Snake Oil, and the SOTU</title>
      <link>https://cestlaz.github.io/posts/2013-02-14-schools-snake-oil-and-the-sotu/</link>
      <pubDate>Thu, 14 Feb 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-02-14-schools-snake-oil-and-the-sotu/</guid>
      <description>Today I had the privilege of attending my second live State of the City address. Mayor Bloomberg didn&amp;rsquo;t spend as much time on education as he did at last year&amp;rsquo;s address but he did take a moment to give a shout out to charter schools. It gets old hearing the same false story about how charters are better than public schools. At least we have people like Gary Rubinstein and Diane Ravitch trying to set the record straight.</description>
    </item>
    
    <item>
      <title>Why we script</title>
      <link>https://cestlaz.github.io/posts/2013-01-24-why-we-script/</link>
      <pubDate>Thu, 24 Jan 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-01-24-why-we-script/</guid>
      <description>I tell my students &amp;ldquo;the cool thing about what we do is that if we&amp;rsquo;re not happy with the way something works, we&amp;rsquo;ve got a shot at fixing it.&amp;rdquo;
That came up this morning so I thought I&amp;rsquo;d share.
I recently posted about the in-term projects my Software Development kids were working on. Well, now it&amp;rsquo;s time to grade their final projects.
The code is up on GitHub. This morning I was faced with independently going to every project page and cloning each one:</description>
    </item>
    
    <item>
      <title>Investing in People</title>
      <link>https://cestlaz.github.io/posts/2012-12-20-investing-in-people/</link>
      <pubDate>Thu, 20 Dec 2012 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2012-12-20-investing-in-people/</guid>
      <description>A little over a year ago, I decided it was time to reach out to my alums, a group I refer to as the &amp;ldquo;Stuy CS family&amp;rdquo; and try to get us together. The most rewarding part of my job involves the relationships I&amp;rsquo;ve developed over the years but is was always between me and my alums and them to their classmates. This was an attempt to start building a network that spanned the years.</description>
    </item>
    
    <item>
      <title>Making Varsity part 1 - Athletics</title>
      <link>https://cestlaz.github.io/posts/2012-11-29-making-varsity-pt-1/</link>
      <pubDate>Thu, 29 Nov 2012 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2012-11-29-making-varsity-pt-1/</guid>
      <description>I&amp;rsquo;ve never been a huge fan of the way we do varsity sports, and I say this as a guy that coached for a number of years. In NYC, we&amp;rsquo;re governed by the Public School Athletic League or PSAL. Practice time and lack of facilities make teaching difficult, but my biggest problem is the fact that most teams cut, that is, if you&amp;rsquo;re not in the top &amp;ldquo;n,&amp;rdquo; you&amp;rsquo;re out. So, if our basketball team has, let&amp;rsquo;s say 15 kids on it, they get exclusive use of the gym every afternoon during basketball season and no one else can receive coaching or be part of the team.</description>
    </item>
    
    <item>
      <title>Alumni Day(s)</title>
      <link>https://cestlaz.github.io/posts/2012-11-25-alum-days/</link>
      <pubDate>Sun, 25 Nov 2012 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2012-11-25-alum-days/</guid>
      <description>The day before Thanksgiving is always fun. For as long as I can remember, recent graduates descend upon Stuy. For the most part, they mull around the senior bar but we get our share up in 301.
This year was a little quiet but I got to see more than my share of graduates over the weekend as I attended the 2002 and 2007 class reunions. I&amp;rsquo;ve only been invited to a handful of reunions and really consider it an honor when I am.</description>
    </item>
    
    <item>
      <title>Back to Work</title>
      <link>https://cestlaz.github.io/posts/2012-11-02-back-to-work/</link>
      <pubDate>Fri, 02 Nov 2012 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2012-11-02-back-to-work/</guid>
      <description>On going back to work today Since school was still out due to Sandy, we ran a second online class yesterday. At the end of the session, which I&amp;rsquo;ll summarize below, I told the class what I wanted them to accomplish today and over the weekend. One student queried &amp;ldquo;you mean no class on Friday :-(?&amp;rdquo; Alas no &amp;ndash; while students aren&amp;rsquo;t reporting to school this morning, teachers are.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://cestlaz.github.io/posts/2016-04-17-emacs-jekyll-nikola/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2016-04-17-emacs-jekyll-nikola/</guid>
      <description>--- title: &#34;Blogging with Emacs, Jekyll and Nikola&#34; date: 2016-04-17 tags: mathjax emacs tools draft: false ---  Switched over from Jekyll to Nikola yesterday.
One of the primary reasons was that I got fed up with managing a Ruby development environment across all my machines. In spite of my rantings, I&#39;m sure Ruby and Ruby installs are fine - it&#39;s just something that I&#39;d have to deal with on a recurring basis for one specific task - other than for Jekyll blogging, I don&#39;t use Ruby.</description>
    </item>
    
    <item>
      <title>college-board Stuff`</title>
      <link>https://cestlaz.github.io/posts/college-board/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/college-board/</guid>
      <description>--- title: &#34;Remember, school is all about profit, wait no, I mean testing, no, I mean...&#34; date: 2016-05-06 tags: policy draft: false ---  It&#39;s important to remember, the college board is about making money for the college board. It&#39;s not about supporting teachers and it&#39;s certainly not about educating kids.
Kids took the AP Computer Science A exam last week and the College Board just released the free response questions.</description>
    </item>
    
  </channel>
</rss>